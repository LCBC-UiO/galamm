[{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://lcbc-uio.github.io/galamm/articles/glmm_factor.html","id":"model-with-binomially-distributed-responses","dir":"Articles","previous_headings":"","what":"Model with Binomially Distributed Responses","title":"Generalized Linear Mixed Models with Factor Structures","text":"use simulated dataset PLmixed package example vignette. vignette linear mixed models factor structures, response treated Gaussian. use appropriate assumption response binomially distributed. First set factor structures used: fit model follows:","code":"data(\"IRTsim\") IRTsim$item <- factor(IRTsim$item) irt.lam <- matrix(c(1, NA, NA, NA, NA), ncol = 1) galamm_mod <- galamm(   formula = y ~ item + (0 + abil.sid | sid) + (0 + abil.sid | school),   data = IRTsim,    family = binomial,   load.var = \"item\",    factor = list(\"abil.sid\"),    lambda = list(irt.lam)   ) #> N = 11, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       1521.3  |proj g|=       55.181 #> At iterate    10  f =       1472.2  |proj g|=       0.19866 #>  #> iterations 16 #> function evaluations 17 #> segments explored during Cauchy searches 17 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.000864991 #> final function value 1472.2 #>  #> F = 1472.2 #> final  value 1472.199908  #> converged  summary(galamm_mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ item + (0 + abil.sid | sid) + (0 + abil.sid | school) #>    Data: IRTsim #>  #>      AIC      BIC   logLik deviance df.resid  #>   2394.3   2458.3  -1472.2   2372.3     2489  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -2.8884 -0.7335  0.4266  0.6235  3.0410  #>  #> Lambda: #>   abil.sid     SE #> 1   1.0000      . #> 2   0.7370 0.1456 #> 3   0.9351 0.1872 #> 4   0.6069 0.1261 #> 5   0.5860 0.1163 #>  #> Random effects: #>  Groups   Name     Variance Std.Dev. #>  sid      abil.sid 1.466    1.211    #>  school   abil.sid 1.300    1.140    #>  Residual          1.000    1.000    #> Number of obs: 2500, groups:  sid, 500; school, 26 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   0.5112     0.2617   1.953 #> item2         0.3256     0.1791   1.818 #> item3        -0.4491     0.1623  -2.768 #> item4         0.4930     0.1924   2.562 #> item5         0.4585     0.1922   2.385"},{"path":"https://lcbc-uio.github.io/galamm/articles/glmm_factor.html","id":"binomial-model-with-multiple-trials","dir":"Articles","previous_headings":"","what":"Binomial Model with Multiple Trials","title":"Generalized Linear Mixed Models with Factor Structures","text":"simulate data computing predictions model fitted , drawing binomial samples multiple trials. binomial models one trial, response specified cbind(successes, failures).","code":"set.seed(1234) dat <- IRTsim dat$trials <- sample(1:10, nrow(dat), replace = TRUE) dat$y <- rbinom(n = nrow(dat), size = dat$trials,                  prob = predict(galamm_mod, type = \"response\")) head(dat) #>     sid school item y trials #> 1.1   1      1    1 8     10 #> 1.2   1      1    2 6      6 #> 1.3   1      1    3 5      5 #> 1.4   1      1    4 6      9 #> 1.5   1      1    5 3      5 #> 2.1   2      1    1 0      6 galamm_mod_trials <- galamm(   formula = cbind(y, trials - y) ~ item + (0 + abil.sid | sid) + (0 + abil.sid | school),   data = dat,    family = binomial,   load.var = \"item\",    factor = list(\"abil.sid\"),    lambda = list(irt.lam)   ) #> N = 11, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       3783.2  |proj g|=       342.25 #> At iterate    10  f =       3498.5  |proj g|=        2.9971 #> At iterate    20  f =       3498.3  |proj g|=     0.0067479 #>  #> iterations 21 #> function evaluations 22 #> segments explored during Cauchy searches 22 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.000337171 #> final function value 3498.29 #>  #> F = 3498.29 #> final  value 3498.289133  #> converged  summary(galamm_mod_trials) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: cbind(y, trials - y) ~ item + (0 + abil.sid | sid) + (0 + abil.sid |   #>     school) #>    Data: dat #>  #>      AIC      BIC   logLik deviance df.resid  #>   2559.4   2623.5  -3498.3   2537.4     2489  #>  #> Scaled residuals:  #>    Min     1Q Median     3Q    Max  #> -2.387  1.811  5.116 10.124 42.919  #>  #> Lambda: #>   abil.sid      SE #> 1   1.0000       . #> 2   0.7040 0.05234 #> 3   0.8750 0.06257 #> 4   0.5744 0.04613 #> 5   0.6076 0.04829 #>  #> Random effects: #>  Groups   Name     Variance Std.Dev. #>  sid      abil.sid 0.6848   0.8275   #>  school   abil.sid 1.1671   1.0803   #>  Residual          1.0000   1.0000   #> Number of obs: 2500, groups:  sid, 500; school, 26 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   0.4768    0.22158   2.152 #> item2         0.3009    0.09257   3.251 #> item3        -0.5032    0.07100  -7.087 #> item4         0.3965    0.11423   3.471 #> item5         0.4823    0.10859   4.442"},{"path":"https://lcbc-uio.github.io/galamm/articles/glmm_factor.html","id":"model-with-poisson-distributed-responses","dir":"Articles","previous_headings":"","what":"Model with Poisson Distributed Responses","title":"Generalized Linear Mixed Models with Factor Structures","text":"illustrate model counts, consider example Chapter 11.3 Skrondal Rabe-Hesketh (2004). model contain factor loadings, use demonstrate fit GLMMs Poisson distributed responses. case can confirm galamm function correctly implemented comparing output lme4::glmer. model like , also best use lme4, factor structures nonlinearities, lme4 longer provides flexibility need. might note deviance summary output model fitted lme4 different deviance model fitted galamm. summary output, lme4 shows deviance minus two times log likelihood. contrast, calling deviance function model object fitted glmer gives output galamm. details deviance calculation lme4, see help(deviance.merMod, \"lme4\").","code":"count_mod <- galamm(   formula = y ~ lbas * treat + lage + v4 + (1|subj),   data = epilep,   family = poisson ) #> N = 7, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       773.26  |proj g|=       138.53 #> At iterate    10  f =       665.95  |proj g|=         9.128 #> At iterate    20  f =       665.36  |proj g|=       0.01895 #>  #> iterations 22 #> function evaluations 28 #> segments explored during Cauchy searches 22 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.000368678 #> final function value 665.359 #>  #> F = 665.359 #> final  value 665.358735  #> converged summary(count_mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ lbas * treat + lage + v4 + (1 | subj) #>    Data: epilep #>  #>      AIC      BIC   logLik deviance df.resid  #>    421.0    445.3   -665.4    407.0      229  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.1918 -0.8456 -0.0917  0.5839  6.6303  #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. #>  subj     (Intercept) 0.2516   0.5016   #>  Residual             1.0000   1.0000   #> Number of obs: 236, groups:  subj, 59 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   1.7936    0.10468  17.134 #> lbas          0.8845    0.13096   6.754 #> treat        -0.3350    0.14775  -2.267 #> lage          0.4846    0.34658   1.398 #> v4           -0.1611    0.05458  -2.952 #> lbas:treat    0.3384    0.20293   1.668 library(lme4) count_mod_lme4 <- glmer(   formula = y ~ lbas * treat + lage + v4 + (1|subj),   data = epilep,   family = poisson ) summary(count_mod_lme4) #> Generalized linear mixed model fit by maximum likelihood (Laplace #>   Approximation) [glmerMod] #>  Family: poisson  ( log ) #> Formula: y ~ lbas * treat + lage + v4 + (1 | subj) #>    Data: epilep #>  #>      AIC      BIC   logLik deviance df.resid  #>   1344.7   1369.0   -665.4   1330.7      229  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.1918 -0.8456 -0.0918  0.5837  6.6303  #>  #> Random effects: #>  Groups Name        Variance Std.Dev. #>  subj   (Intercept) 0.2515   0.5015   #> Number of obs: 236, groups:  subj, 59 #>  #> Fixed effects: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)   1.7937     0.1045  17.165  < 2e-16 *** #> lbas          0.8844     0.1308   6.764 1.34e-11 *** #> treat        -0.3349     0.1474  -2.272  0.02311 *   #> lage          0.4845     0.3458   1.401  0.16121     #> v4           -0.1611     0.0543  -2.966  0.00301 **  #> lbas:treat    0.3382     0.2025   1.671  0.09479 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Correlation of Fixed Effects: #>            (Intr) lbas   treat  lage   v4     #> lbas       -0.035                             #> treat      -0.708  0.024                      #> lage       -0.092 -0.037  0.099               #> v4          0.015  0.000  0.000  0.000        #> lbas:treat  0.001 -0.654 -0.087  0.252  0.000 deviance(count_mod_lme4) #> [1] 407.0092"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/articles/lmm_factor.html","id":"model-with-a-single-factor","dir":"Articles","previous_headings":"","what":"Model with a Single Factor","title":"Linear Mixed Models with Factor Structures","text":"use simulated dataset PLmixed package example vignette. Note response ideally treated binomial; come back vignette generalized linear mixed models factor structures. First set factor structures used: use following code fit model PLmixed. Next fit model using galamm. typically 6-7 times faster corresponding call using PLmixed, gives results identical deviations due numerics.","code":"data(\"IRTsim\") IRTsim$item <- factor(IRTsim$item) irt.lam <- matrix(c(1, NA, NA, NA, NA), ncol = 1) pl_mod <- PLmixed(   formula = y ~ item + (0 + abil.sid | sid) + (0 + abil.sid | school),   data = IRTsim,    load.var = \"item\",    factor = list(\"abil.sid\"),    lambda = list(irt.lam),    iter.count = FALSE   ) summary(pl_mod) galamm_mod <- galamm(   formula = y ~ item + (0 + abil.sid | sid) + (0 + abil.sid | school),   data = IRTsim,    load.var = \"item\",    factor = list(\"abil.sid\"),    lambda = list(irt.lam)   ) #> N = 11, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       1729.4  |proj g|=       348.93 #> At iterate    10  f =       1544.5  |proj g|=        28.081 #> At iterate    20  f =       1538.6  |proj g|=        2.9025 #>  #> iterations 27 #> function evaluations 32 #> segments explored during Cauchy searches 28 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.027674 #> final function value 1538.54 #>  #> F = 1538.54 #> final  value 1538.543237  #> converged  summary(galamm_mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ item + (0 + abil.sid | sid) + (0 + abil.sid | school) #>    Data: IRTsim #>  #>      AIC      BIC   logLik deviance df.resid  #>   3101.1   3171.0  -1538.5   3077.1     2488  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -2.1515 -0.8921  0.3510  0.7147  2.2193  #>  #> Lambda: #>   abil.sid      SE #> 1   1.0000       . #> 2   0.8415 0.09986 #> 3   0.9862 0.10730 #> 4   0.7093 0.09476 #> 5   0.6924 0.09246 #>  #> Random effects: #>  Groups   Name     Variance Std.Dev. #>  sid      abil.sid 0.04419  0.2102   #>  school   abil.sid 0.03304  0.1818   #>  Residual          0.17194  0.4147   #> Number of obs: 2500, groups:  sid, 500; school, 26 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   0.5893    0.04167  14.141 #> item2         0.0686    0.02698   2.543 #> item3        -0.0723    0.02633  -2.746 #> item4         0.1078    0.02847   3.786 #> item5         0.1034    0.02872   3.602"},{"path":"https://lcbc-uio.github.io/galamm/articles/lmm_factor.html","id":"models-with-multiple-factors","dir":"Articles","previous_headings":"","what":"Models with Multiple Factors","title":"Linear Mixed Models with Factor Structures","text":"example comes Section 3.1 Jeon Rabe-Hesketh (2012). next Example 1 Rockwood Jeon (2019). run using PLmixed following syntax, takes hours. get identical results using galamm less five minutes. However, since five minutes bit much vignette, don’t show output .","code":"data(\"KYPSsim\") KYPSsim$time <- factor(KYPSsim$time) kyps.lam <- rbind(c( 1, 0),                   c(NA, 0),                   c(NA, 1),                   c(NA, NA)) kyps_plmixed <- PLmixed(   formula = esteem ~ as.factor(time) +  (0 + hs | hid) + (0 + ms | mid) + (1 | sid),    data = KYPSsim,   factor = list(c(\"ms\", \"hs\")),    load.var = c(\"time\"),   lambda = list(kyps.lam)   )  summary(kyps_plmixed) kyps_model <- galamm(   formula = esteem ~ time + (0 + hs | hid) + (0 + ms | mid) + (1 | sid),   data = KYPSsim,    factor = list(c(\"ms\", \"hs\")),    load.var = \"time\",   lambda = list(kyps.lam) ) #> N = 11, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=        12247  |proj g|=       3272.3 #> At iterate    10  f =        10005  |proj g|=         187.1 #> At iterate    20  f =       9947.3  |proj g|=        83.309 #> At iterate    30  f =       9819.1  |proj g|=        123.42 #> At iterate    40  f =       9688.2  |proj g|=          26.3 #> At iterate    50  f =       9682.5  |proj g|=        13.684 #> At iterate    60  f =       9682.1  |proj g|=        16.198 #> At iterate    70  f =         9682  |proj g|=       0.25503 #>  #> iterations 76 #> function evaluations 95 #> segments explored during Cauchy searches 78 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.0231238 #> final function value 9681.99 #>  #> F = 9681.99 #> final  value 9681.987388  #> converged  summary(kyps_model) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: esteem ~ time + (0 + hs | hid) + (0 + ms | mid) + (1 | sid) #>    Data: KYPSsim #>  #>      AIC      BIC   logLik deviance df.resid  #>  19388.0  19476.2  -9682.0  19364.0    11482  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.7952 -0.5945  0.0028  0.6049  3.5753  #>  #> Lambda: #>        ms     SE    hs    SE #> 1 1.00000      .     .     . #> 2 0.87509 0.1421     .     . #> 3 0.04432 0.1496 1.000     . #> 4 0.02094 0.1543 1.502 0.504 #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. #>  sid      (Intercept) 0.151749 0.38955  #>  hid      hs          0.005253 0.07248  #>  mid      ms          0.010695 0.10342  #>  Residual             0.222511 0.47171  #> Number of obs: 11494, groups:  sid, 2924; hid, 860; mid, 104 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   3.1479    0.01524 206.619 #> time2         0.1184    0.01253   9.451 #> time3         0.1534    0.01607   9.547 #> time4         0.1924    0.01675  11.489 data(\"JUDGEsim\") JUDGEsim$item <- factor(JUDGEsim$item) judge.lam <- rbind(c( 1,  0,  1,  0,  0,  0),                    c(NA,  0, NA,  0,  0,  0),                    c(NA,  0, NA,  0,  0,  0),                    c( 0,  1,  0,  1,  0,  0),                    c( 0, NA,  0, NA,  0,  0),                    c( 0, NA,  0, NA,  0,  0),                    c( 0,  0,  0,  0,  1,  0),                    c( 0,  0,  0,  0, NA,  0),                    c( 0,  0,  0,  0, NA,  0),                    c( 0,  0,  0,  0,  0,  1),                    c( 0,  0,  0,  0,  0, NA),                    c( 0,  0,  0,  0,  0, NA)) judge_plmixed <- PLmixed(response ~ 0 + item + (1 | class)                          + (0 + trait1.t + trait2.t + trait1.s + trait2.s | stu)                          + (0 + teacher1 + teacher2 | tch), data = JUDGEsim,                          lambda = list(judge.lam), load.var = \"item\",                          factor = list(c(\"teacher1\", \"teacher2\", \"trait1.t\",                                          \"trait2.t\", \"trait1.s\", \"trait2.s\")))  summary(judge_plmixed) judge_galamm <- galamm( formula = response ~ 0 + item + (1 | class) +    (0 + trait1.t + trait2.t + trait1.s + trait2.s | stu) +    (0 + teacher1 + teacher2 | tch),  data = JUDGEsim, lambda = list(judge.lam),  load.var = \"item\", factor = list(c(\"teacher1\", \"teacher2\", \"trait1.t\",                  \"trait2.t\", \"trait1.s\", \"trait2.s\")) )"},{"path":"https://lcbc-uio.github.io/galamm/articles/lmm_factor.html","id":"model-with-a-product-of-factor-loadings","dir":"Articles","previous_headings":"","what":"Model with a Product of Factor Loadings","title":"Linear Mixed Models with Factor Structures","text":"Finally, Example 2, Rockwood Jeon (2019) consider model contains products factor loadings. start preparing data: model can fitted using PLmixed follows. Note “ms”, “hs” “lat.var” factor, formula contains products hs:lat.var ms:lat.var. moment, model directly fitted galamm, although reformulation likely possible. work adding functionality.","code":"data(\"KYPSitemsim\")  time.lam <- rbind(c( 1,  0),  # Specify time lambda matrix                   c(NA,  0),                   c(NA,  1),                   c(NA, NA))  item.lam <- matrix(c(1, NA, NA, NA, NA, NA), ncol = 1) # Specify item lambda matrix  KYPSitemsim$time2 <- (KYPSitemsim$time == 2) * 1 KYPSitemsim$time3 <- (KYPSitemsim$time == 3) * 1 KYPSitemsim$time4 <- (KYPSitemsim$time == 4) * 1 KYPSitemsim$item <- factor(KYPSitemsim$item) kyps.item.model <- PLmixed(response ~ 0 + as.factor(item) + lat.var:time2                            + lat.var:time3 + lat.var:time4 + (0 + hs:lat.var | hid)                            + (0 + ms:lat.var | mid) + (0 + lat.var:as.factor(time) | id),                            data = KYPSitemsim, lambda = list(time.lam, item.lam),                            factor = list(c(\"ms\", \"hs\"), \"lat.var\"),                            load.var = c(\"time\", \"item\"))  summary(kyps.item.model)"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/articles/lmm_heteroscedastic.html","id":"group-wise-heteroscedasticity","dir":"Articles","previous_headings":"","what":"Group-Wise Heteroscedasticity","title":"Heteroscedastic Linear Mixed Models","text":"package includes simulated dataset hsced, residual variance varies items. specify error structure using additional formula object, ~ (1 | item), specifying different constraint term included per item. output shows item 2, residual variance half item 1.","code":"head(hsced) #>   id tp item         x          y #> 1  1  1    1 0.7448212  0.1608286 #> 2  1  1    2 0.7109629  2.2947255 #> 3  1  2    1 0.9507326 -0.4731834 #> 4  1  2    2 0.4205776  1.1280379 #> 5  1  3    1 0.1045820 -0.5129498 #> 6  1  3    2 0.3872984  1.0515916 mod <- galamm(   formula = y ~ x + (1 | id),   weights = ~ (1 | item),   data = hsced ) #> N = 4, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       2117.4  |proj g|=        74.56 #> At iterate    10  f =       2058.1  |proj g|=    9.0535e-05 #>  #> iterations 10 #> function evaluations 12 #> segments explored during Cauchy searches 12 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 9.05346e-05 #> final function value 2058.14 #>  #> F = 2058.14 #> final  value 2058.140213  #> converged summary(mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ x + (1 | id) #>    Data: hsced #> Weights: ~(1 | item) #>  #>      AIC      BIC   logLik deviance df.resid  #>   4126.3   4151.7  -2058.1   4116.3     1195  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -5.6545 -0.7105  0.0286  0.6827  4.3261  #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. #>  id       (Intercept) 0.9880   0.9940   #>  Residual             0.9597   0.9796   #> Number of obs: 1200, groups:  id, 200 #>  #> Variance function: #>      1      2  #> 1.0000 0.5013  #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)   0.1289     0.0992   1.299 #> x             0.7062     0.1212   5.826"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"mixed-normal-and-binomial-response","dir":"Articles","previous_headings":"","what":"Mixed Normal and Binomial Response","title":"Models with Mixed Response Types","text":"start mresp dataset, comes package. variable “itemgroup” defines response type; equals “” normally distributed responses “b” binomially distributed responses.","code":"mixed_resp <- galamm(   formula = y ~ x + (0 + itemgroup | id),   data = mresp,   family = c(gaussian, binomial),   family_mapping = ifelse(mresp$itemgroup == \"a\", 1L, 2L) ) #> N = 5, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=         4904  |proj g|=       399.51 #> At iterate    10  f =       4619.2  |proj g|=        1.5099 #>  #> iterations 15 #> function evaluations 16 #> segments explored during Cauchy searches 16 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.000585461 #> final function value 4619.2 #>  #> F = 4619.2 #> final  value 4619.204005  #> converged  summary(mixed_resp) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ x + (0 + itemgroup | id) #>    Data: mresp #>  #>      AIC      BIC   logLik deviance df.resid  #>   3584.8   3622.6  -4619.2   3572.8     3994  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.7489 -0.6793  0.2109  0.6297  2.7061  #>  #> Random effects: #>  Groups   Name       Variance Std.Dev. Corr #>  id       itemgroupa 1.044    1.022         #>           itemgroupb 1.372    1.171    0.97 #>  Residual            1.137    1.066         #> Number of obs: 4000, groups:  id, 1000 #>  #> Fixed effects: #>             Estimate Std. Error t value #> (Intercept)  0.04053    0.05836  0.6944 #> x            0.97422    0.08687 11.2143"},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"covariate-measurement-error-model","dir":"Articles","previous_headings":"","what":"Covariate Measurement Error Model","title":"Models with Mixed Response Types","text":"example taken Chapter 14.2 Skrondal Rabe-Hesketh (2004), refer interpretation discussion. main purpose confirm reproduce results, show syntax. model defined follows. First, true fiber intake subject \\(j\\) assumed depend age whether person bus driver banking staff, interaction. \\[\\eta_{j} = \\mathbf{x}_{j}'\\boldsymbol{\\gamma} + \\zeta_{j}.\\] part sample, two measurements fiber intake, can hence estimate measurement model, follows: \\[y_{ij} = \\eta_{j} + \\epsilon_{ij}, \\qquad \\epsilon_{ij} = N(0, \\theta)\\] Finally define disease model probability coronary heart disease, \\[\\text{logit}[P(D_{j}=1 | \\eta_{j})] = \\mathbf{x}_{j}'\\boldsymbol{\\beta} + \\lambda \\eta_{j}.\\] Stacking three responses, fiber intake times 1 2, coronary heart disease, can define joint model GLLAMM linear predictor \\[\\nu_{ij} = d_{3i} \\mathbf{x}_{j}'\\boldsymbol{\\beta} + \\mathbf{x}_{j}'\\boldsymbol{\\gamma}\\left[(d_{1i} + d_{2i}) + \\lambda d_{3i}\\right] + \\zeta_{j} \\left[(d_{1i} + d_{2i}) + \\lambda d_{3i}\\right],\\] \\(d_{1i}\\) \\(d_{2i}\\) indicators fiber measurements timepoints 1 2, \\(d_{3i}\\) indicator coronary heart disease. point may help look first rows dataset. dataset, response \\(y\\) normally distributed \\(d_{1i}=1\\) \\(d_{2i}=1\\), binomially distributed \\(d_{3i}=1\\). two response processes connected latent variable \\(\\eta_{j}\\). compute estimates, note Hessian rank deficient. Inspecting parameters shows latent variable estimated zero variance. try increase initial value, see happens. Now able reproduce results close Table 14.1 page 420 Skrondal Rabe-Hesketh (2004).","code":"head(diet, 10) #>    id   age bus   item         y chd fiber fiber2 #> 1   1 -0.38   1 fiber1 17.814280   0     1  FALSE #> 2   1 -0.38   1    chd  0.000000   1     0  FALSE #> 3   2  0.54   1 fiber1  9.487736   0     1  FALSE #> 4   2  0.54   1    chd  0.000000   1     0  FALSE #> 5   3  8.78   1 fiber1 15.958630   0     1  FALSE #> 6   3  8.78   1    chd  0.000000   1     0  FALSE #> 7   4  8.73   1 fiber1 17.115760   0     1  FALSE #> 8   4  8.73   1    chd  0.000000   1     0  FALSE #> 9   5  9.46   1 fiber1 14.585090   0     1  FALSE #> 10  5  9.46   1    chd  0.000000   1     0  FALSE lam <- matrix(c(1, 1, NA), ncol = 1) mod <- galamm(   formula = y ~ item + (age * bus) : chd    + (age * bus) : loading : fiber + (0 + loading | id),    data = diet,   family = c(gaussian, binomial),   family_mapping = ifelse(diet$item == \"chd\", 2L, 1L),   factor = list(\"loading\"),    load.var = \"item\",    lambda = list(lam)   ) #> N = 11, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=         2148  |proj g|=       122.68 #> At iterate    10  f =       1857.3  |proj g|=        54.132 #> At iterate    20  f =       1533.2  |proj g|=        11.521 #> At iterate    30  f =       1443.7  |proj g|=        74.915 #> At iterate    40  f =       1407.1  |proj g|=        5.5352 #>  #> iterations 46 #> function evaluations 51 #> segments explored during Cauchy searches 47 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 1 #> norm of the final projected gradient 0.00371649 #> final function value 1406.8 #>  #> F = 1406.8 #> final  value 1406.801104  #> converged #> Hessian rank deficient. Could not compute covariance matrix. mod <- galamm(   formula = y ~ item + (age * bus) : chd + (age * bus) : loading : fiber + (0 + loading | id),    data = diet,   family = c(gaussian, binomial),   family_mapping = ifelse(diet$item == \"chd\", 2L, 1L),   factor = list(\"loading\"),    load.var = \"item\",    lambda = list(lam),   start = list(theta = 10)   ) #> N = 11, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       2827.6  |proj g|=       123.31 #> At iterate    10  f =       1793.3  |proj g|=        20.885 #> At iterate    20  f =         1749  |proj g|=        29.645 #> At iterate    30  f =         1617  |proj g|=        123.76 #> At iterate    40  f =         1503  |proj g|=        11.186 #> At iterate    50  f =       1438.2  |proj g|=        37.775 #> At iterate    60  f =         1377  |proj g|=        10.015 #> At iterate    70  f =       1372.2  |proj g|=       0.49059 #>  #> iterations 74 #> function evaluations 91 #> segments explored during Cauchy searches 75 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.00274664 #> final function value 1372.16 #>  #> F = 1372.16 #> final  value 1372.160386  #> converged summary(mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ item + (age * bus):chd + (age * bus):loading:fiber + (0 +   #>     loading | id) #>    Data: diet #>  #>      AIC      BIC   logLik deviance df.resid  #>   2026.9   2082.2  -1372.2   2002.9      730  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -258553      -1       0       0      66  #>  #> Lambda: #>   loading      SE #> 1  1.0000       . #> 2  1.0000       . #> 3 -0.1339 0.05121 #>  #> Random effects: #>  Groups   Name    Variance Std.Dev. #>  id       loading 23.635   4.862    #>  Residual          6.962   2.639    #> Number of obs: 742, groups:  id, 333 #>  #> Fixed effects: #>                        Estimate Std. Error   t value #> (Intercept)            17.94854    0.48686  36.86603 #> itemfiber2              0.22407    0.41783   0.53627 #> itemchd               -19.86377    0.60069 -33.06838 #> age:chd                 0.06614    0.05931   1.11515 #> bus:chd                -0.02896    0.34355  -0.08431 #> age:bus:chd            -0.04997    0.06507  -0.76800 #> age:loading:fiber      -0.21201    0.10090  -2.10110 #> bus:loading:fiber      -1.68309    0.63721  -2.64132 #> age:bus:loading:fiber   0.16815    0.11223   1.49825"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Øystein Sørensen. Author, maintainer.","code":""},{"path":"https://lcbc-uio.github.io/galamm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sørensen Ø (2023). galamm: Generalized Additive Latent Mixed Models. https://github.com/LCBC-UiO/galamm, https://lcbc-uio.github.io/galamm/.","code":"@Manual{,   title = {galamm: Generalized Additive Latent and Mixed Models},   author = {Øystein Sørensen},   year = {2023},   note = {https://github.com/LCBC-UiO/galamm, https://lcbc-uio.github.io/galamm/}, }"},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"the-galamm-package-for-fitting-generalized-additive-latent-and-mixed-models","dir":"","previous_headings":"","what":"Generalized Additive Latent and Mixed Models","title":"Generalized Additive Latent and Mixed Models","text":"galamm R package fitting multivariate generalized additive mixed models factor structures. package currently development, changes API must expected. package uses interface similar PLmixed, fits generalized linear mixed models factor structures. However, galamm allows semiparametric estimations gamm4, hence flexibly allows estimation nonlinear effects. plan package provide tool fast scalable estimation generalized linear latent mixed models (GLLAMMs) (Rabe-Hesketh, Skrondal, Pickles 2004) semiparametric extensions termed generalized additive latent mixed models (GALAMMs) (Sørensen, Fjell, Walhovd 2023). already possible extent, using function marginal_likelihood, documented vignette maximum likelihood estimation. obtain , combine sparse matrix computations RcppEigen (Bates Eddelbuettel 2013) automatic differentiation using C++ library autodiff (Leal 2018).","code":""},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generalized Additive Latent and Mixed Models","text":"can install development version galamm GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"LCBC-UiO/galamm\")"},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Generalized Additive Latent and Mixed Models","text":"now, please refer repository code can used reproduce results Sørensen, Fjell, Walhovd (2023).","code":""},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/news.html","id":null,"dir":"","previous_headings":"","what":"galamm version 0.1.0","title":"galamm version 0.1.0","text":"Initial version.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":null,"dir":"Reference","previous_headings":"","what":"Diet Data — diet","title":"Diet Data — diet","text":"Longitudinal epilepsy data  . documenation based Chapter 14.2  , dataset used. See also  .","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diet Data — diet","text":"","code":"diet"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":"diet-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"diet A data frame with 236 rows and 7 columns:","title":"Diet Data — diet","text":"id Subject ID. age Age (standardized). bus Dummy variable indicating whether subject bus driver banking staff. item Integer indicating whether outcome fiber intake time 1 (item = 1), fiber intake time 2 (item = 2), coronary heart disease (item = 3). y Outcome. chd Dummy variable indicating whether y indicator coronary heart disease, coded 0/1. fiber Dummary variable indicating whether y fiber measurement either timepoint 1 2. fiber2 Dummary variable indicating whether y fiber measurement timepoint 2.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Diet Data — diet","text":"http://www.gllamm.org/books/readme.html#14.2","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diet Data — diet","text":"Adummy (2023). “avalable.” Failed insert reference keys =      morrisDietHeartPostscript1977 skrondalGeneralizedLatentVariable2004 rabe-heskethCorrectingCovariateMeasurement2003 package = 'galamm'. Possible cause --- missing REFERENCES.bib package 'galamm' 'galamm' installed.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":null,"dir":"Reference","previous_headings":"","what":"Epilepsy Data — epilep","title":"Epilepsy Data — epilep","text":"Longitudinal epilepsy data  . documenation based Chapter 11.3  , dataset used.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epilepsy Data — epilep","text":"","code":"epilep"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":"epilep-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"epilep A data frame with 236 rows and 7 columns:","title":"Epilepsy Data — epilep","text":"subj Subject ID. y Number seizures. treat Dummy variable treatment group. visit Time visit. v4 Dummy visit 4. lage Logarithm age. lbas Logarithm quarter number seizures eight weeks preceeding entry trial.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Epilepsy Data — epilep","text":"http://www.gllamm.org/books/readme.html#11.3","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Epilepsy Data — epilep","text":"Adummy (2023). “avalable.” Failed insert reference keys =      leppikControlledStudyProgabide1987 skrondalGeneralizedLatentVariable2004 package = 'galamm'. Possible cause --- missing REFERENCES.bib package 'galamm' 'galamm' installed.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"galamm: Estimation of Generalized Additive Latent and\nMixed Models. — galamm-package","title":"galamm: Estimation of Generalized Additive Latent and\nMixed Models. — galamm-package","text":"package performs maximum marginal likelihood estimation generalized additive latent mixed models.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a generalized additive latent and mixed model — galamm","title":"Fit a generalized additive latent and mixed model — galamm","text":"Fit generalized additive latent mixed model","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a generalized additive latent and mixed model — galamm","text":"","code":"galamm(   formula,   weights = NULL,   data,   family = gaussian,   family_mapping = rep(1L, nrow(data)),   load.var = NULL,   lambda = NULL,   factor = NULL,   start = NULL )"},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a generalized additive latent and mixed model — galamm","text":"formula formula weights optional formula object specifying expression residual variance. Defaults NULL, corresponding homoscedastic errors. data dataset family vector families family_mapping vector mapping elements \"family\" rows \"data\". Defaults rep(1L, nrow(data)), means observations distributed according first element \"family\". load.var Variable factors load onto lambda Loading factor list factors start named list starting values parameters. Possible names list elements \"theta\", \"beta\", \"lambda\", represent numerical vectors.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a generalized additive latent and mixed model — galamm","text":"model object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/hsced.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data with Heteroscedastic Residuals — hsced","title":"Example Data with Heteroscedastic Residuals — hsced","text":"Simulated dataset residual standard deviation varies items.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/hsced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data with Heteroscedastic Residuals — hsced","text":"","code":"hsced"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/hsced.html","id":"diet-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"diet A data frame with 1200 rows and 5 columns:","title":"Example Data with Heteroscedastic Residuals — hsced","text":"id Subject ID. age Timepoint. item Item indicator. x Explanatory variable y Outcome.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/hsced.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Data with Heteroscedastic Residuals — hsced","text":"references Rd macro \\insertAllCites help page.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"function computes Laplace approximate marginal likelihood.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"","code":"marginal_likelihood(   y,   trials = NULL,   X,   Zt,   Lambdat,   beta,   theta,   theta_mapping,   u_init = rep(0, nrow(Zt)),   lambda = numeric(),   lambda_mapping_X = integer(),   lambda_mapping_X_covs = integer(),   lambda_mapping_Zt = integer(),   lambda_mapping_Zt_covs = integer(),   weights = numeric(),   weights_mapping = integer(),   family = \"gaussian\",   family_mapping = rep(0L, length(y)),   maxit_conditional_modes = 1L,   gradient = TRUE,   hessian = FALSE,   epsilon_u = 1e-10 )"},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"y numeric vector responses. trials numeric vector representing number trials. used binomial models, set arbitrary value otherwise. X dense numeric matrix. Zt sparse matrix class dgCMatrix. Lambdat sparse matrix class dgCMatrix. beta numeric vector fixed effects. theta numeric vector variance components, parametrized identically lme4. theta_mapping integer vector corresponding Lind used lme4, base zero indexing. u_init Initial values random effects. Defaults vector zeros. lambda numeric vector factor loadings. lambda_mapping_X integer vector mappings X lambda, columnwise. set integer() used. entry -1 indicates corresponding value X depend lambda, case first element lambda fixed 1. lambda_mapping_X_covs Optional list covariates. lambda_mapping_Zt integer vector mappings Zt lambda, along nonzero elements Zt can found Zt@x. set integer() used. entry -1 indicates corresponding value X depend lambda, case first element lambda fixed 1. lambda_mapping_Zt_covs Optional list covariates. weights Vector weights. weights_mapping Mapping family length one character denoting family. family_mapping Mapping maxit_conditional_modes Maximum number iterations conditional models. Can 1 family = \"gaussian\". gradient Boolean specifying whether including gradient given parameters. Defaults TRUE. hessian Boolean specifying whether include Hessian matrix given parameters. Defaults FALSE. epsilon_u Tolerance inner iteration. Defaults 1e-10.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"list elements logLik gradient.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"examples, see vignette maximum likelihood estimation.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/mresp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Mixed Response Data — mresp","title":"Simulated Mixed Response Data — mresp","text":"basic mixed response dataset one set normally distributed responses one set binomially distributed responses.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/mresp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Mixed Response Data — mresp","text":"","code":"mresp"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/mresp.html","id":"mresp-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"mresp A data frame with 4000 rows and 5 columns:","title":"Simulated Mixed Response Data — mresp","text":"id Subject ID. x Predictor variable. y Response. itemgroup Factor variable equals \"\" normally distributed responses \"b\" binomially distributed response (1 trial).","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/predict.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions from a model at new data values — predict.galamm","title":"Predictions from a model at new data values — predict.galamm","text":"Predictions model new data values","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/predict.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions from a model at new data values — predict.galamm","text":"","code":"# S3 method for galamm predict(object, newdata = NULL, type = c(\"link\", \"response\"))"},{"path":"https://lcbc-uio.github.io/galamm/reference/predict.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions from a model at new data values — predict.galamm","text":"object fitted model object newdata Data evaluate predictions. Defaults \"NULL\", means predictions evaluate data used fit model. type Type prediction object returned.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/predict.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions from a model at new data values — predict.galamm","text":"number vector predicted values.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/print.summary.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for GALAMM fits — print.summary.galamm","title":"Print method for GALAMM fits — print.summary.galamm","text":"Print method GALAMM fits","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/print.summary.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for GALAMM fits — print.summary.galamm","text":"","code":"# S3 method for summary.galamm print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/print.summary.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for GALAMM fits — print.summary.galamm","text":"x object class \"summary.galamm\". digits Number digits. ... arguments.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/print.summary.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for GALAMM fits — print.summary.galamm","text":"Summary printed screen. Invisible returns argument x.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/summary.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing GALAMM Fits — summary.galamm","title":"Summarizing GALAMM Fits — summary.galamm","text":"Summary method class \"galamm\".","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/summary.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing GALAMM Fits — summary.galamm","text":"","code":"# S3 method for galamm summary(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/summary.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing GALAMM Fits — summary.galamm","text":"object object class \"galamm\", usually result calling galamm. ... arguments.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/summary.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing GALAMM Fits — summary.galamm","text":"list summary statistics fitted model.","code":""}]
