[{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socioeconomic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement oystein.sorensen.1985@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to galamm","title":"Contributing to galamm","text":"outlines propose change galamm.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to galamm","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to galamm","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://lcbc-uio.github.io/galamm/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to galamm","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"LCBC-UiO/galamm\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to galamm","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://lcbc-uio.github.io/galamm/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to galamm","text":"Please note galamm project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://lcbc-uio.github.io/galamm/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"generalized-additive-latent-and-mixed-models","dir":"Articles","previous_headings":"","what":"Generalized Additive Latent and Mixed Models","title":"Introduction","text":"Generalized additive latent mixed models (GALAMMs) (Sørensen, Fjell, Walhovd 2023) extension generalized linear latent mixed models (GLLAMMs) (Rabe-Hesketh, Skrondal, Pickles 2004; Skrondal Rabe-Hesketh 2004) allows observed responses latent variables depend smoothly observed variables. Smoothly means relationship assumed follow particular parametric form, e.g., specified linear model. Instead, priori assumption made relationship smooth, model attempts learn relationship data. GALAMM uses smoothing splines obtain , identically generalized additive models (GAMs) (Wood 2017) estimated. GLLAMM framework contains many elements currently implemented galamm package. includes nonparametric random effects large number model families, e.g., censored responses. need , semiparametric estimation, Stata based GLLAMM package likely place go. Conversely, galamm incorporates crossed random effects easily efficiently, hard specify using GLLAMM.","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"response-model","dir":"Articles","previous_headings":"Generalized Additive Latent and Mixed Models","what":"Response Model","title":"Introduction","text":"GALAMMs specified using three building blocks. First, \\(n\\) resposes \\(y_{1}, \\dots, y_{n}\\) assumed independently distributed according exponential family density \\[ f\\left(y | \\theta, \\phi\\right) = \\exp \\left( \\frac{y\\theta(\\mu) - b\\left(\\theta(\\mu)\\right)}{\\phi} + c\\left(y, \\phi\\right) \\right) \\] \\(\\mu = g^{-1}(\\nu)\\) mean, \\(g^{-1}(\\cdot)\\) inverse link function \\(g(\\cdot)\\), \\(\\nu\\) “nonlinear predictor”, \\(\\phi\\) dispersion parameter, \\(b(\\cdot)\\) \\(c(\\cdot)\\) known functions. contrast assumed, e.g., lme4 (Bates et al. 2015), functions \\(b(\\cdot)\\), \\(c(\\cdot)\\), \\(g(\\cdot)\\) allowed vary observations. , observations can come different members exponential family. vignette models mixed response types describes detail. Using canonical link functions, response model simplifies \\[ f\\left(y | \\nu, \\phi\\right) = \\exp \\left( \\frac{y\\nu - b\\left(\\nu\\right)}{\\phi} + c\\left(y, \\phi\\right) \\right) \\]","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"nonlinear-predictor","dir":"Articles","previous_headings":"Generalized Additive Latent and Mixed Models","what":"Nonlinear Predictor","title":"Introduction","text":"Next, nonlinear predictor, corresponds measurement model classical structural equation model, defined \\[ \\nu = \\sum_{s=1}^{S} f_{s}\\left(\\mathbf{x}\\right) + \\sum_{l=2}^{L}\\sum_{m=1}^{M_{l}} \\eta_{m}^{(l)} \\mathbf{z}^{(l)}_{m}{}^{'}\\boldsymbol{\\lambda}_{m}^{(l)}, \\] \\(\\mathbf{x}\\) explanatory variables, \\(f_{s}(\\mathbf{x})\\), \\(s=1,\\dots,S\\) smooth functions, \\(\\eta_{m}^{(l)}\\) latent variables varying level \\(l\\), \\(\\boldsymbol{\\lambda}_{m}^{(l)}{}^{T} \\mathbf{z}_{m}^{(l)}\\) weighted sum vector explanatory variables \\(\\mathbf{z}_{m}^{(l)}\\) varying level \\(l\\) parameters \\(\\boldsymbol{\\lambda}_{m}^{(l)}\\). Let \\[\\boldsymbol{\\eta}^{(l)} = [\\eta_{1}^{(l)}, \\dots, \\eta_{M_{l}}^{(l)}]^{T} \\\\mathbb{R}^{M_{l}}\\] vector latent variables level \\(l\\), \\[\\boldsymbol{\\eta} = [\\boldsymbol{\\eta}^{(2)}, \\dots, \\boldsymbol{\\eta}^{(L)}]^{T} \\\\mathbb{R}^{M}\\] vector latent variables belonging given level-2 unit, \\(M = \\sum_{l=2}^{L} M_{l}\\). word “level” used denote grouping level; necessarily hierarchical.","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"structural-model","dir":"Articles","previous_headings":"","what":"Structural Model","title":"Introduction","text":"structural model specifies latent variables related observed variables, given \\[ \\boldsymbol{\\eta} = \\mathbf{B}\\boldsymbol{\\eta} + \\mathbf{h}\\left(\\mathbf{w}\\right) + \\boldsymbol{\\zeta} \\] \\(\\mathbf{B}\\) \\(M \\times M\\) matrix regression coefficients regression among latent variables \\(\\mathbf{w} \\\\mathbb{R}^{Q}\\) vector \\(Q\\) predictors latent variables. \\(\\mathbf{h}(\\mathbf{w}) = [\\mathbf{h}_{2}(\\mathbf{w}), \\dots, \\mathbf{h}_{L}(\\mathbf{w})] \\\\mathbb{R}^{M}\\) vector smooth functions whose components \\(\\mathbf{h}_{l}(\\mathbf{w}) \\\\mathbb{R}^{M_{l}}\\) vectors functions predicting latent variables varying level \\(l\\), depending subset elements \\(\\mathbf{w}\\). \\(\\boldsymbol{\\zeta}\\) vector normally distributed random effects, \\(\\boldsymbol{\\zeta}^{(l)} \\sim N(\\mathbf{0}, \\boldsymbol{\\Psi}^{(l)})\\) \\(l=2,\\dots,L\\), \\(\\boldsymbol{\\Psi}^{(l)} \\\\mathbb{R}^{M_{l} \\times M_{l}}\\) covariance matrix random effects level \\(l\\). Defining \\(M \\times M\\) covariance matrix \\(\\boldsymbol{\\Psi} = \\text{diag}(\\boldsymbol{\\Psi}^{(2)}, \\dots, \\boldsymbol{\\Psi}^{(L)})\\), also \\(\\boldsymbol{\\zeta} \\sim N(\\mathbf{0}, \\boldsymbol{\\Psi})\\).","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"mixed-model-representation","dir":"Articles","previous_headings":"","what":"Mixed Model Representation","title":"Introduction","text":"Sørensen, Fjell, Walhovd (2023) show model specified can transformed GLLAMM, essentially generalized nonlinear mixed model. transformation rather complex, won’t spell , key steps : Converting smooth terms mixed model form. Estimate resulting GLLAMM. Convert back original parametrization. galamm use transformations gamm4 package .","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"maximum-marginal-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Maximum Marginal Likelihood Estimation","title":"Introduction","text":"mixed model representation, nonlinear predictor can written form \\[ \\boldsymbol{\\nu} = \\mathbf{X}(\\boldsymbol{\\lambda}, \\mathbf{B}) \\boldsymbol{\\beta} +  \\mathbf{Z}(\\boldsymbol{\\lambda}, \\mathbf{B}) \\boldsymbol{\\zeta} \\] \\(\\mathbf{X}(\\boldsymbol{\\lambda}, \\mathbf{B})\\) regression matrix fixed effects \\(\\boldsymbol{\\beta}\\) \\(\\mathbf{Z}(\\boldsymbol{\\lambda}, \\mathbf{B})\\) regression matrix random effects \\(\\boldsymbol{\\zeta}\\). contrast generalized linear mixed models, however, matrices general depend factor loadings \\(\\boldsymbol{\\lambda}\\) regression coefficients latent variables \\(\\mathbf{B}\\). parameters need estimated, hence \\(\\mathbf{X}(\\boldsymbol{\\lambda}, \\mathbf{B})\\) \\(\\boldsymbol{\\beta}\\) \\(\\mathbf{Z}(\\boldsymbol{\\lambda}, \\mathbf{B})\\) need updated throughout estimation process.","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"evaluating-the-marginal-likelihood","dir":"Articles","previous_headings":"Maximum Marginal Likelihood Estimation","what":"Evaluating the Marginal Likelihood","title":"Introduction","text":"Plugging nonlinear predictor structural model, obtain joint likelihood model. obtain marginal likelihood integrating random effects, yielding marginal likelihood function form \\[ L\\left(\\boldsymbol{\\beta}, \\boldsymbol{\\Lambda}, \\boldsymbol{\\Gamma}, \\boldsymbol{\\lambda}, \\mathbf{B}, \\boldsymbol{\\phi}\\right) =  \\left(2 \\pi \\phi_{1}\\right)^{-r/2}  \\int_{\\mathbb{R}^{r}} \\exp\\left( g\\left(\\boldsymbol{\\beta}, \\boldsymbol{\\Lambda}, \\boldsymbol{\\Gamma}, \\boldsymbol{\\lambda}, \\mathbf{B}, \\boldsymbol{\\phi}, \\mathbf{u}\\right) \\right) \\text{d} \\mathbf{u} \\] \\(\\mathbf{u}\\) standardized version \\(\\boldsymbol{\\zeta}\\). order evaluate marginal likelihood given set parameter values, use Laplace approximation combined sparse matrix operations, extending Bates et al. (2015)’s algorithm linear mixed models.","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"maximizing-the-marginal-likelihood","dir":"Articles","previous_headings":"Maximum Marginal Likelihood Estimation","what":"Maximizing the Marginal Likelihood","title":"Introduction","text":"obtain maximum marginal likelihood estimates maximizing \\(L\\left(\\boldsymbol{\\beta}, \\boldsymbol{\\Lambda}, \\boldsymbol{\\Gamma}, \\boldsymbol{\\lambda}, \\mathbf{B}, \\boldsymbol{\\phi}\\right)\\), subject possible constraints, e.g., variances non-negative. , use L-BFGS-B algorithm implement stats::optim. predicted values random effects, \\(\\widehat{\\mathbf{u}}\\) obtained posterior modes final estimates.","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/galamm.html","id":"example-models","dir":"Articles","previous_headings":"","what":"Example Models","title":"Introduction","text":"see galamm used practice, take look vignettes describing models different components. Linear mixed models factor structures. Generalized linear mixed models factor structures. Linear mixed models heteroscedastic residuals. Mixed models mixed response types. Generalized additive mixed models factor structures.","code":""},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/articles/glmm_factor.html","id":"model-with-binomially-distributed-responses","dir":"Articles","previous_headings":"","what":"Model with Binomially Distributed Responses","title":"Generalized Linear Mixed Models with Factor Structures","text":"use simulated dataset PLmixed package example. observations binomial responses representing ability measurement. first lines shown . student identified student id sid, school school id given school variable. student, five item measurements made. assume student’s performance depends students ability well school student attends. outline GALAMMs introductory vignette mind, assume binomial response model logit link, yielding \\(\\)th measurement \\(j\\)th student \\(k\\)th school, \\[ \\text{P}(y_{ijk} = 1 | \\mathbf{x}_{ijk}, \\boldsymbol{\\eta}_{jk}) = \\frac{\\exp(\\nu_{ijk})}{1 + \\exp(\\nu_{ijk})} \\] latent variable vector given \\(\\boldsymbol{\\eta}_{jk} = (\\eta_{j}, \\eta_{jk})^{T}\\), last element effect school \\(j\\)th student attends. nonlinear predictor given \\[ \\nu_{ijk} = \\mathbf{x}_{ijk}^{T} \\boldsymbol{\\beta} + \\mathbf{x}_{ijk}^{T}\\boldsymbol{\\lambda} (\\eta_{j} + \\eta_{jk}) \\] \\(\\mathbf{x}_{ij}\\) vector containing dummy variables items, \\(\\eta_{j}\\) latent variable describing underlying ability student \\(j\\), \\(\\eta_{k}\\) latent variable describing effect school \\(k\\). factor loading \\(\\lambda\\) describes sum two latent variables impacts nonlinear predictor, hence probability correct response. note using common \\(\\lambda\\) two latent variables like necessarily good model, makes introductory example easier follow. extend model later. structural model simply \\[ \\boldsymbol{\\eta}_{jk} = \\boldsymbol{\\zeta}_{jk} \\sim N_{2}(\\mathbf{0}, \\boldsymbol{\\Psi}), \\] \\(N(\\mathbf{0}, \\boldsymbol{\\Psi})\\) denotes bivariate normal distribution mean zero covariance matrix \\(\\boldsymbol{\\Psi}\\). covariance matrix assumed diagonal. confirm item five levels. means \\(\\boldsymbol{\\lambda}\\) vector five elements. identifiability, fix first element \\(\\boldsymbol{\\lambda}\\) one. rest freely estimated. defining following matrix. numeric value implies element fixed, whereas NA implies element unknown, estimated. fit model follows: couple things model formula worth pointing . First part (0 + ability | school / sid) model formula specifies student ability varies students within schools. corresponds term \\(\\mathbf{x}_{ijk}^{T}\\boldsymbol{\\lambda} (\\eta_{j} + \\eta_{jk})\\) mathematical specification model. variable ability part IRTsim dataframe, instead specified argument factor = list(\"ability\"). argument load.var = \"item\" specifies rows dataframe value “item” get element \\(\\boldsymbol{\\lambda}\\), hence defines dummy variable \\(\\mathbf{x}_{ijk}\\). Finally, lambda = list(loading_matrix) provides matrix factor loadings. Note must explicitly add zero (0 + ability | school / sid) avoid random intercept estimated addition effect value “item”; model identified. fixed effect part model formula, simply item, specifies term \\(\\mathbf{x}_{ijk}^{T} \\boldsymbol{\\beta}\\). can start inspecting fitted model: fixef method lets us consider fixed effects: can also get Wald type confidence intervals fixed effects. can similarly extract factor loadings. can find confidence intervals . Currently, Wald type confidence intervals available. aware intervals may poor coverage properties. can also show diagnostic plot, although binomial model like informative.","code":"library(PLmixed) head(IRTsim) #>     sid school item y #> 1.1   1      1    1 1 #> 1.2   1      1    2 1 #> 1.3   1      1    3 1 #> 1.4   1      1    4 0 #> 1.5   1      1    5 1 #> 2.1   2      1    1 1 IRTsim$item <- factor(IRTsim$item) table(IRTsim$item) #>  #>   1   2   3   4   5  #> 500 500 500 500 500 (loading_matrix <- matrix(c(1, NA, NA, NA, NA), ncol = 1)) #>      [,1] #> [1,]    1 #> [2,]   NA #> [3,]   NA #> [4,]   NA #> [5,]   NA mod <- galamm(   formula = y ~ item + (0 + ability | school / sid),   data = IRTsim,   family = binomial,   load.var = \"item\",   factor = list(\"ability\"),   lambda = list(loading_matrix) ) summary(mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ item + (0 + ability | school/sid) #>    Data: IRTsim #>  #>      AIC      BIC   logLik deviance df.resid  #>   2966.4   3030.5  -1472.2   2372.3     2489  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -2.8884 -0.7335  0.4266  0.6235  3.0410  #>  #> Lambda: #>         ability     SE #> lambda1  1.0000      . #> lambda2  0.7370 0.1456 #> lambda3  0.9351 0.1872 #> lambda4  0.6069 0.1261 #> lambda5  0.5860 0.1163 #>  #> Random effects: #>  Groups     Name    Variance Std.Dev. #>  sid:school ability 1.466    1.211    #>  school     ability 1.300    1.140    #> Number of obs: 2500, groups:  sid:school, 500; school, 26 #>  #> Fixed effects: #>             Estimate Std. Error z value Pr(>|z|) #> (Intercept)   0.5112     0.2617   1.953 0.050777 #> item2         0.3256     0.1791   1.818 0.069068 #> item3        -0.4491     0.1623  -2.768 0.005644 #> item4         0.4930     0.1924   2.562 0.010402 #> item5         0.4585     0.1922   2.385 0.017067 fixef(mod) #> (Intercept)       item2       item3       item4       item5  #>   0.5112006   0.3255941  -0.4491070   0.4929827   0.4584897 confint(mod, parm = \"beta\") #>                    2.5 %     97.5 % #> (Intercept) -0.001727334  1.0241286 #> item2       -0.025430062  0.6766183 #> item3       -0.767138526 -0.1310755 #> item4        0.115869898  0.8700955 #> item5        0.081749228  0.8352303 factor_loadings(mod) #>           ability        SE #> lambda1 1.0000000        NA #> lambda2 0.7370254 0.1455782 #> lambda3 0.9351105 0.1872049 #> lambda4 0.6069065 0.1260943 #> lambda5 0.5859914 0.1162977 confint(mod, parm = \"lambda\") #>             2.5 %    97.5 % #> lambda1 0.4516974 1.0223534 #> lambda2 0.5681956 1.3020254 #> lambda3 0.3597662 0.8540468 #> lambda4 0.3580520 0.8139307 plot(mod)"},{"path":"https://lcbc-uio.github.io/galamm/articles/glmm_factor.html","id":"binomial-model-with-multiple-trials","dir":"Articles","previous_headings":"","what":"Binomial Model with Multiple Trials","title":"Generalized Linear Mixed Models with Factor Structures","text":"now show model studied can extended handle binomially distributed data multiple trials. simulate data computing predictions model fitted , drawing binomial samples multiple trials. binomial models one trial, response specified cbind(successes, failures). utility functions apply model well. simply post summary output .","code":"set.seed(1234) dat <- IRTsim dat$trials <- sample(1:10, nrow(dat), replace = TRUE) dat$y <- rbinom(   n = nrow(dat), size = dat$trials,   prob = predict(mod, type = \"response\") ) head(dat) #>     sid school item y trials #> 1.1   1      1    1 8     10 #> 1.2   1      1    2 6      6 #> 1.3   1      1    3 5      5 #> 1.4   1      1    4 6      9 #> 1.5   1      1    5 3      5 #> 2.1   2      1    1 0      6 galamm_mod_trials <- galamm(   formula = cbind(y, trials - y) ~ item + (0 + ability | school / sid),   data = dat,   family = binomial,   load.var = \"item\",   factor = list(\"ability\"),   lambda = list(loading_matrix) ) summary(galamm_mod_trials) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: cbind(y, trials - y) ~ item + (0 + ability | school/sid) #>    Data: dat #>  #>      AIC      BIC   logLik deviance df.resid  #>   7018.6   7082.6  -3498.3   2537.4     2489  #>  #> Scaled residuals:  #>    Min     1Q Median     3Q    Max  #> -2.387  1.811  5.116 10.124 42.919  #>  #> Lambda: #>         ability      SE #> lambda1  1.0000       . #> lambda2  0.7040 0.05234 #> lambda3  0.8750 0.06257 #> lambda4  0.5744 0.04613 #> lambda5  0.6076 0.04829 #>  #> Random effects: #>  Groups     Name    Variance Std.Dev. #>  sid:school ability 0.6848   0.8275   #>  school     ability 1.1671   1.0803   #> Number of obs: 2500, groups:  sid:school, 500; school, 26 #>  #> Fixed effects: #>             Estimate Std. Error z value  Pr(>|z|) #> (Intercept)   0.4768    0.22158   2.152 3.142e-02 #> item2         0.3009    0.09257   3.251 1.151e-03 #> item3        -0.5032    0.07100  -7.087 1.371e-12 #> item4         0.3965    0.11423   3.471 5.186e-04 #> item5         0.4823    0.10859   4.442 8.919e-06"},{"path":"https://lcbc-uio.github.io/galamm/articles/glmm_factor.html","id":"model-with-poisson-distributed-responses","dir":"Articles","previous_headings":"","what":"Model with Poisson Distributed Responses","title":"Generalized Linear Mixed Models with Factor Structures","text":"illustrate model counts, consider example Chapter 11.3 Skrondal Rabe-Hesketh (2004). model contain factor loadings, use demonstrate fit GLMMs Poisson distributed responses. can look summary output. case factor loadings return: can look diagnostic plot, case looks much reasonable.  case can confirm galamm function correctly implemented comparing output lme4::glmer. model like , also best use lme4, factor structures nonlinearities, lme4 longer provides flexibility need. can confirm diagnostic plot values galamm:  can summary output. might note deviance summary output model fitted lme4 different deviance model fitted galamm. summary output, lme4 shows deviance minus two times log likelihood. contrast, calling deviance function model object fitted glmer gives output galamm. details deviance calculation lme4, see help(deviance.merMod, \"lme4\").","code":"count_mod <- galamm(   formula = y ~ lbas * treat + lage + v4 + (1 | subj),   data = epilep,   family = poisson ) summary(count_mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ lbas * treat + lage + v4 + (1 | subj) #>    Data: epilep #>  #>      AIC      BIC   logLik deviance df.resid  #>   1344.7   1369.0   -665.4    407.0      229  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.1918 -0.8456 -0.0917  0.5839  6.6303  #>  #> Random effects: #>  Groups Name        Variance Std.Dev. #>  subj   (Intercept) 0.2516   0.5016   #> Number of obs: 236, groups:  subj, 59 #>  #> Fixed effects: #>             Estimate Std. Error z value  Pr(>|z|) #> (Intercept)   1.7936    0.10468  17.134 8.230e-66 #> lbas          0.8845    0.13096   6.754 1.436e-11 #> treat        -0.3350    0.14775  -2.267 2.339e-02 #> lage          0.4846    0.34658   1.398 1.621e-01 #> v4           -0.1611    0.05458  -2.952 3.161e-03 #> lbas:treat    0.3384    0.20293   1.668 9.541e-02 factor_loadings(count_mod) plot(count_mod) library(lme4) #> Loading required package: Matrix count_mod_lme4 <- glmer(   formula = y ~ lbas * treat + lage + v4 + (1 | subj),   data = epilep,   family = poisson ) plot(count_mod_lme4) summary(count_mod_lme4) #> Generalized linear mixed model fit by maximum likelihood (Laplace #>   Approximation) [glmerMod] #>  Family: poisson  ( log ) #> Formula: y ~ lbas * treat + lage + v4 + (1 | subj) #>    Data: epilep #>  #>      AIC      BIC   logLik deviance df.resid  #>   1344.7   1369.0   -665.4   1330.7      229  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.1918 -0.8456 -0.0918  0.5837  6.6303  #>  #> Random effects: #>  Groups Name        Variance Std.Dev. #>  subj   (Intercept) 0.2515   0.5015   #> Number of obs: 236, groups:  subj, 59 #>  #> Fixed effects: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)   1.7937     0.1045  17.165  < 2e-16 *** #> lbas          0.8844     0.1308   6.764 1.34e-11 *** #> treat        -0.3349     0.1474  -2.272  0.02311 *   #> lage          0.4845     0.3458   1.401  0.16121     #> v4           -0.1611     0.0543  -2.966  0.00301 **  #> lbas:treat    0.3382     0.2025   1.671  0.09479 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Correlation of Fixed Effects: #>            (Intr) lbas   treat  lage   v4     #> lbas       -0.035                             #> treat      -0.708  0.024                      #> lage       -0.092 -0.037  0.099               #> v4          0.015  0.000  0.000  0.000        #> lbas:treat  0.001 -0.654 -0.087  0.252  0.000 deviance(count_mod_lme4) #> [1] 407.0092"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/articles/lmm_factor.html","id":"crossed-random-effects-model-with-persistence-parameters","dir":"Articles","previous_headings":"","what":"Crossed Random Effects Model with Persistence Parameters","title":"Linear Mixed Models with Factor Structures","text":"example comes Section 3.1 Jeon Rabe-Hesketh (2012), whose model based McCaffrey et al. (2004). dataset KYPSsim comes PLmixed simulated version Korea Youth Panel Survey (KYPS) data. Student self esteem (variable esteem) assessed four timepoints, first two student attended middle school, second two student attended high school. variables mid hid represent middle school high school given student attended, sid student identifier. variable time indicates given timepoint. use discrete time model, hence convert time variable factor. Since students attending given middle school necessarily attend high school, model crossed random effects. use model Jeon Rabe-Hesketh (2012), whose measurement part can formulated \\[ y_{tsmh} = \\beta_{0} + \\sum_{t'=2}^{4} d_{tt'}\\beta_{t'} + \\mathbf{d}_{t}^{T} \\left(\\boldsymbol{\\lambda}_{m}  \\eta_{m} + \\boldsymbol{\\lambda}_{h}  \\eta_{h}\\right) + \\eta_{s} + \\epsilon_{tsmh}, \\] \\(\\mathbf{d}_{t} = (d_{t1},d_{t2},d_{t3},d_{t4})^{T}\\) vector whose \\(t\\)th element equals one elements equal zero. \\(\\beta_{0}\\) intercept, \\(\\beta_{2}\\), \\(\\beta_{3}\\), \\(\\beta_{4}\\) effects timepoints 2, 3, 4. \\(\\eta_{m}\\) \\(\\eta_{h}\\) “teacher effects” middle school \\(m\\) high school \\(s\\), respectively, \\(\\eta_{s}\\) latent level student \\(s\\), \\(\\epsilon_{tsmh}\\) residual term. \\(\\boldsymbol{\\lambda}_{m}\\) \\(\\boldsymbol{\\lambda}_{h}\\) factor loadings (called “persistence parameters” McCaffrey et al. (2004) Jeon Rabe-Hesketh (2012)) specifying teacher effects middle school high school impact self esteem measurement. Since students attend high school middle school, measurements self esteem middle school assumed affected high school, hence first two elements \\(\\boldsymbol{\\lambda}_{h}\\) set zero. first nonzero element set zero identifiability, \\(\\boldsymbol{\\lambda}_{h} = (0, 0, 1, \\lambda_{h4})^{T}\\). Conversely, allow middle school effect measurements high school, \\(\\boldsymbol{\\lambda}_{m} = (1, \\lambda_{m2}, \\lambda_{m3}, \\lambda_{m4})^{T}\\), first element set zero identifiability. residuals assumed normally distributed, \\(\\epsilon_{tsmh} \\sim N(0, \\phi)\\). Written four timepoints, model becomes \\[ \\begin{aligned} y_{1smh} &= \\beta_{0} +  \\eta_{m} + \\eta_{s} + \\epsilon_{1smh} \\\\ y_{2smh} &= \\beta_{0} + \\beta_{2} + \\lambda_{m2}  \\eta_{m} + \\eta_{s} + \\epsilon_{2smh} \\\\ y_{3smh} &= \\beta_{0} + \\beta_{3} + \\lambda_{m3}  \\eta_{m} +  \\eta_{h} + \\eta_{s} + \\epsilon_{3smh} \\\\ y_{4smh} &= \\beta_{0} + \\beta_{4} + \\lambda_{m4}  \\eta_{m} + \\lambda_{h4}  \\eta_{h} + \\eta_{s} + \\epsilon_{4smh} \\end{aligned} \\] structural model simply \\[ \\begin{pmatrix} \\eta_{m} \\\\ \\eta_{h} \\\\ \\eta_{s} \\end{pmatrix} = \\begin{pmatrix} \\zeta_{m} \\\\ \\zeta_{h} \\\\ \\zeta_{s} \\end{pmatrix} \\sim N_{3}\\left(\\mathbf{0}, \\begin{bmatrix} \\psi_{m} & 0 & 0 \\\\ 0 & \\psi_{h} & 0 \\\\ 0 & 0 & \\psi_{s} \\end{bmatrix} \\right), \\] \\(N_{3}(, b)\\) denotes trivariate normal distribution mean \\(\\) covariance \\(b\\). order fit model galamm, use syntax PLmixed, start defining loading matrix. first column contains \\(\\boldsymbol{\\lambda}_{m}\\) second column contains \\(\\boldsymbol{\\lambda}_{h}\\). Numerical values matrix means entry fixed given value, whereas NA means value unknown, estimated. enclose matrix list, potentially can multiple matrices, list element. connect loading matrix variables dataframe following list factors. Since list loading matrices single element, also list factors single element, one character vector column loading matrix. Finally, define loading variable. variable connecting rows dataframe rows loading matrices. case, value time, corresponding row loading matrix multiplied latent variables \\(\\eta_{m}\\) \\(\\eta_{h}\\), set follows: model formula specified use lme4 syntax random effects. example, term (0 + ms | mid) corresponds \\(\\lambda_{mt}\\eta_{m}\\), | mid specifies \\(\\eta_{m}\\) unique value unique mid. Since \"ms\" can found factors defined , term treated specially, making sure latent variable multiplied factor loading corresponding \"ms\" particular row. contrast, latent variable students \\(\\eta_{s}\\) simple random intercept, hence term (1 | sid) suffices. fit model using galamm following call. model fit PLmixed using following call exactly arguments galamm. reader encouraged try, confirm results essentially equivalent, won’t run vignette takes 5-10 minutes. Using galamm’s summary method, can study model output. can look factor loadings specifically using factor_loadings function. Perhaps surprisingly, middle school teacher effects low impact self esteem student attends high school, can seen last two rows “ms” column close zero. diagnostic plot residuals versus predicted values also looks acceptable, although seems slight upward trend.  can also compare estimated model model constrained factor loadings. particular, assume teacher effect middle school effect self esteem measured high school, setting last two elements \\(\\boldsymbol{\\lambda}_{m}\\) zero. following loading matrix. assume factor loadings timepoints 1 2 middle school timepoints 3 4 high schools identical, practice lead linear mixed model factors. One way estimating model define new loading matrix: Equivalently, create dummy variables timepoints: formulation, don’t need specify factor, load.var, lambda arguments. can compare four models using anova member function. Reassuringly, two ways formulating last model give identical results. Furthermore, simplest model seems preferred two complex models simulated dataset.","code":"head(KYPSsim) #>   mid hid sid time   esteem #> 1   1   1   1    1 2.759234 #> 2   1   1   1    2 2.980368 #> 3   1   1   1    3 3.130784 #> 4   1   1   1    4 3.310306 #> 5   2   1   2    1 2.924520 #> 6   2   1   2    2 2.997440 KYPSsim$time <- factor(KYPSsim$time) levels(KYPSsim$time) #> [1] \"1\" \"2\" \"3\" \"4\" (loading_matrix <- list(rbind(   c(1, 0),   c(NA, 0),   c(NA, 1),   c(NA, NA) ))) #> [[1]] #>      [,1] [,2] #> [1,]    1    0 #> [2,]   NA    0 #> [3,]   NA    1 #> [4,]   NA   NA factors <- list(c(\"ms\", \"hs\")) load.var <- \"time\" form <- esteem ~ time + (0 + ms | mid) + (0 + hs | hid) + (1 | sid) mod <- galamm(   formula = form,   data = KYPSsim,   factor = factors,   load.var = load.var,   lambda = loading_matrix ) kyps_plmixed <- PLmixed(   formula = form,   data = KYPSsim,   factor = factors,   load.var = load.var,   lambda = loading_matrix ) summary(mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: form #>    Data: KYPSsim #>  #>      AIC      BIC   logLik deviance df.resid  #>  19388.0  19476.2  -9682.0  19364.0    11482  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.7952 -0.5945  0.0028  0.6049  3.5753  #>  #> Lambda: #>              ms     SE    hs    SE #> lambda1 1.00000      .     .     . #> lambda2 0.87509 0.1421     .     . #> lambda3 0.04432 0.1496 1.000     . #> lambda4 0.02094 0.1543 1.502 0.504 #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. #>  sid      (Intercept) 0.151749 0.38955  #>  hid      hs          0.005253 0.07248  #>  mid      ms          0.010695 0.10342  #>  Residual             0.222511 0.47171  #> Number of obs: 11494, groups:  sid, 2924; hid, 860; mid, 104 #>  #> Fixed effects: #>             Estimate Std. Error t value  Pr(>|t|) #> (Intercept)   3.1479    0.01524 206.619 0.000e+00 #> time2         0.1184    0.01253   9.451 3.361e-21 #> time3         0.1534    0.01607   9.547 1.339e-21 #> time4         0.1924    0.01675  11.489 1.496e-30 factor_loadings(mod) #>                 ms        SE       hs        SE #> lambda1 1.00000000        NA 0.000000        NA #> lambda2 0.87509297 0.1421073 0.000000        NA #> lambda3 0.04431734 0.1495679 1.000000        NA #> lambda4 0.02093658 0.1542824 1.501574 0.5040218 plot(mod) (loading_matrix_constr1 <- list(rbind(   c(1, 0),   c(NA, 0),   c(0, 1),   c(0, NA) ))) #> [[1]] #>      [,1] [,2] #> [1,]    1    0 #> [2,]   NA    0 #> [3,]    0    1 #> [4,]    0   NA mod_constr1 <- galamm(   formula = form,   data = KYPSsim,   factor = factors,   load.var = load.var,   lambda = loading_matrix_constr1 ) (loading_matrix_constr2 <- list(rbind(   c(1, 0),   c(1, 0),   c(0, 1),   c(0, 1) ))) #> [[1]] #>      [,1] [,2] #> [1,]    1    0 #> [2,]    1    0 #> [3,]    0    1 #> [4,]    0    1 mod_constr2 <- galamm(   formula = form,   data = KYPSsim,   factor = factors,   load.var = load.var,   lambda = loading_matrix_constr2 ) KYPSsim$time12 <- as.integer(KYPSsim$time %in% 1:2) KYPSsim$time34 <- as.integer(KYPSsim$time %in% 3:4) head(KYPSsim) #>   mid hid sid time   esteem time12 time34 #> 1   1   1   1    1 2.759234      1      0 #> 2   1   1   1    2 2.980368      1      0 #> 3   1   1   1    3 3.130784      0      1 #> 4   1   1   1    4 3.310306      0      1 #> 5   2   1   2    1 2.924520      1      0 #> 6   2   1   2    2 2.997440      1      0 mod_constr2b <- galamm(   formula = esteem ~ time + (0 + time12 | mid) + (0 + time34 | hid) + (1 | sid),   data = KYPSsim ) anova(   mod, mod_constr1, mod_constr2,   mod_constr2b ) #> Data: KYPSsim #> Models: #> mod_constr2: form #> mod_constr2b: esteem ~ time + (0 + time12 | mid) + (0 + time34 | hid) + (1 | sid) #> mod_constr1: form #> mod: form #>              npar   AIC   BIC  logLik deviance   Chisq Df Pr(>Chisq)    #> mod_constr2     8 19394 19452 -9688.9    19378                          #> mod_constr2b    8 19394 19452 -9688.9    19378  0.0000  0               #> mod_constr1    10 19397 19471 -9688.5    19377  0.6661  2   0.716735    #> mod            12 19388 19476 -9682.0    19364 13.1070  2   0.001425 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://lcbc-uio.github.io/galamm/articles/lmm_factor.html","id":"multi-trait-multi-rater-model","dir":"Articles","previous_headings":"","what":"Multi-Trait Multi-Rater Model","title":"Linear Mixed Models with Factor Structures","text":"next consider model based example 1 Rockwood Jeon (2019), uses dataset JUDGEsim PLmixed, simulated mimic data used Koch et al. (2016). refer Rockwood Jeon (2019) details, merely present model estimate using galamm. data contains ratings two traits students, traits rated students teachers. Initially, need convert item variable factor. first ten rows dataset follows: grouping factors data class (variable class), student (variable stu) teacher (variable tch). teachers’ ratings first trait given items 1-3, students’ rating trait given items 7-9. second trait, items 4-6 10-12, respectively. Looking frequency table, see observations items 1-6. happens single teacher general rate one student, whereas single student rate . matrix-vector format, measurement model (equation 16 Rockwood Jeon (2019)) \\[ \\begin{pmatrix} y_{1tsc} \\\\ \\vdots \\\\ y_{12tsc} \\\\ \\end{pmatrix} = \\begin{pmatrix} \\beta_{1} \\\\ \\vdots \\\\ \\beta_{12} \\end{pmatrix} + \\begin{pmatrix} 1 & 0 & 1 & 0 & 0 & 0 & 1\\\\ \\lambda_{21} & 0 & \\lambda_{23} & 0 & 0 & 0 & 1 \\\\ \\lambda_{31} & 0 & \\lambda_{33} & 0 & 0 & 0 & 1\\\\ 0 & 1 & 0 & 1 & 0 & 0 & 1 \\\\ 0 & \\lambda_{52} & 0 & \\lambda_{54} & 0 & 0 & 1 \\\\ 0 & \\lambda_{62} & 0 & \\lambda_{64} & 0 & 0 & 1 \\\\ 0 & 0 & 0 & 0 & 1 & 0 & 1 \\\\ 0 & 0 & 0 & 0 & \\lambda_{85} & 0 & 1 \\\\ 0 & 0 & 0 & 0 & \\lambda_{95} & 0 & 1 \\\\ 0 & 0 & 0 & 0 & 0 & 1 & 1 \\\\ 0 & 0 & 0 & 0 & 0 & \\lambda_{11,6} & 1 \\\\ 0 & 0 & 0 & 0 & 0 & \\lambda_{12,6} & 1 \\\\ \\end{pmatrix} \\begin{pmatrix} \\eta_{1t}^{(t)} \\\\ \\eta_{2t}^{(t)} \\\\ \\eta_{3s}^{(s)} \\\\ \\eta_{4s}^{(s)} \\\\ \\eta_{5s}^{(s)} \\\\ \\eta_{6s}^{(s)} \\\\ \\eta_{7c}^{(c)} \\\\ \\end{pmatrix} + \\boldsymbol{\\epsilon}_{tsc} \\] brief, \\(\\eta_{1t}^{(t)}\\) \\(\\eta_{2t}^{(t)}\\) teacher effects, \\(\\eta_{3s}^{(s)}\\) \\(\\eta_{4s}^{(s)}\\) teacher’s perception students trait, \\(\\eta_{5s}^{(s)}\\) \\(\\eta_{6s}^{(s)}\\) students’ perception trait, \\(\\eta_{7c}^{(c)}\\) classroom effect. factor loadings “regression coefficients” regressing observed items onto latent traits. subscripts \\(t\\), \\(s\\), \\(c\\) indicate teacher, student, class, respectively. structural model simply \\[ \\begin{pmatrix} \\eta_{1t}^{(t)} \\\\ \\eta_{2t}^{(t)} \\\\ \\eta_{3s}^{(s)} \\\\ \\eta_{4s}^{(s)} \\\\ \\eta_{5s}^{(s)} \\\\ \\eta_{6s}^{(s)} \\\\ \\eta_{7c}^{(c)} \\\\ \\end{pmatrix} = \\begin{pmatrix} \\zeta_{1t}^{(t)} \\\\ \\zeta_{2t}^{(t)} \\\\ \\zeta_{3s}^{(s)} \\\\ \\zeta_{4s}^{(s)} \\\\ \\zeta_{5s}^{(s)} \\\\ \\zeta_{6s}^{(s)} \\\\ \\zeta_{7c}^{(c)} \\\\ \\end{pmatrix} \\] \\[ \\begin{pmatrix} \\zeta_{1t}^{(t)} \\\\ \\zeta_{2t}^{(t)} \\\\ \\end{pmatrix} \\sim N_{2}(\\mathbf{0}, \\boldsymbol{\\Psi}^{(t)}), \\] \\[ \\begin{pmatrix} \\zeta_{3s}^{(s)} \\\\ \\zeta_{4s}^{(s)} \\\\ \\zeta_{5s}^{(s)} \\\\ \\zeta_{6s}^{(s)} \\\\ \\end{pmatrix} \\sim N_{4}(\\mathbf{0}, \\boldsymbol{\\Psi}^{(s)}), \\] \\[ \\begin{pmatrix} \\zeta_{7c}^{(c)} \\\\ \\end{pmatrix} \\sim N_{1}(0, \\psi^{(c)}), \\] \\[ \\epsilon_{tsc} \\sim N_{1}(0, \\phi). \\] specify loading matrix follows. comparison mathematical model formulation just , note don’t need add last column ones, since column contains parameters estimated. Next, specify factors order appear columns loading matrix. can choose whichever names like factors, except names existing variables dataset, must make sure match names used formula. formula defined follows, placed terms order appear mathematical model matrix-vector form specified . Using PLmixed, estimated model follows, confirm results galamm. get identical results using galamm less five minutes. However, since five minutes bit much vignette, won’t run .","code":"JUDGEsim$item <- factor(JUDGEsim$item) head(JUDGEsim, 10) #>    item method trait stu class tch response #> 1     1      1     1   1     1   1 2.509475 #> 2     1      1     1   1     1   2 3.246730 #> 3     1      1     1   1     1   3 2.846695 #> 4     1      1     1   1     1   4 2.290954 #> 5     1      1     1   1     1   5 2.794368 #> 6     1      1     1   1     1   6 2.849511 #> 7     1      1     1   1     1   7 2.255039 #> 8     1      1     1   2     1   1 2.676437 #> 9     1      1     1   2     1   2 2.923184 #> 10    1      1     1   2     1   3 2.778979 table(JUDGEsim$item) #>  #>    1    2    3    4    5    6    7    8    9   10   11   12  #> 7828 7828 7828 7828 7828 7828 1249 1249 1249 1249 1249 1249 (loading_matrix <- list(rbind(   c(1, 0, 1, 0, 0, 0),   c(NA, 0, NA, 0, 0, 0),   c(NA, 0, NA, 0, 0, 0),   c(0, 1, 0, 1, 0, 0),   c(0, NA, 0, NA, 0, 0),   c(0, NA, 0, NA, 0, 0),   c(0, 0, 0, 0, 1, 0),   c(0, 0, 0, 0, NA, 0),   c(0, 0, 0, 0, NA, 0),   c(0, 0, 0, 0, 0, 1),   c(0, 0, 0, 0, 0, NA),   c(0, 0, 0, 0, 0, NA) ))) #> [[1]] #>       [,1] [,2] [,3] [,4] [,5] [,6] #>  [1,]    1    0    1    0    0    0 #>  [2,]   NA    0   NA    0    0    0 #>  [3,]   NA    0   NA    0    0    0 #>  [4,]    0    1    0    1    0    0 #>  [5,]    0   NA    0   NA    0    0 #>  [6,]    0   NA    0   NA    0    0 #>  [7,]    0    0    0    0    1    0 #>  [8,]    0    0    0    0   NA    0 #>  [9,]    0    0    0    0   NA    0 #> [10,]    0    0    0    0    0    1 #> [11,]    0    0    0    0    0   NA #> [12,]    0    0    0    0    0   NA factors <- list(c(   \"teacher1\", \"teacher2\", \"trait1.t\",   \"trait2.t\", \"trait1.s\", \"trait2.s\" )) form <- response ~ 0 + item + (0 + teacher1 + teacher2 | tch) +   (0 + trait1.t + trait2.t + trait1.s + trait2.s | stu) +   (1 | class) judge_plmixed <- PLmixed(   formula = form,   data = JUDGEsim,   lambda = list(loading_matrix),   load.var = \"item\",   factor = factors ) judge_galamm <- galamm(   formula = form,   data = JUDGEsim,   lambda = list(loading_matrix),   load.var = \"item\",   factor = factors )"},{"path":"https://lcbc-uio.github.io/galamm/articles/lmm_factor.html","id":"model-with-a-product-of-factor-loadings","dir":"Articles","previous_headings":"","what":"Model with a Product of Factor Loadings","title":"Linear Mixed Models with Factor Structures","text":"Finally, Example 2, Rockwood Jeon (2019) consider model contains products factor loadings. moment, model estimated using galamm, although work adding future.","code":""},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/articles/lmm_heteroscedastic.html","id":"group-wise-heteroscedasticity","dir":"Articles","previous_headings":"","what":"Group-Wise Heteroscedasticity","title":"Heteroscedastic Linear Mixed Models","text":"package includes simulated dataset hsced, residual variance varies items. specify error structure using additional formula object, ~ (1 | item), specifying different constraint term included per item. output shows item 2, residual variance twice item 1. can confirm lme function nlme package gives result. reports multiplies standard deviation scale, since \\(1.412369^2 = 1.995\\), results identical. diagnostic plot also looks good.  can compare model one homoscedastic residuals. Reassuringly, correct model chosen simple simulated case.","code":"head(hsced) #>   id tp item         x          y #> 1  1  1    1 0.7448212  0.1608286 #> 2  1  1    2 0.7109629  2.2947255 #> 3  1  2    1 0.9507326 -0.4731834 #> 4  1  2    2 0.4205776  1.1280379 #> 5  1  3    1 0.1045820 -0.5129498 #> 6  1  3    2 0.3872984  1.0515916 mod <- galamm(   formula = y ~ x + (1 | id),   weights = ~ (1 | item),   data = hsced ) summary(mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ x + (1 | id) #>    Data: hsced #> Weights: ~(1 | item) #>  #>      AIC      BIC   logLik deviance df.resid  #>   4126.3   4151.7  -2058.1   4116.3     1195  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -5.6545 -0.7105  0.0286  0.6827  4.3261  #>  #> Random effects: #>  Groups   Name        Variance Std.Dev. #>  id       (Intercept) 0.9880   0.9940   #>  Residual             0.9597   0.9796   #> Number of obs: 1200, groups:  id, 200 #>  #> Variance function: #>     1     2  #> 1.000 1.995  #>  #> Fixed effects: #>             Estimate Std. Error t value  Pr(>|t|) #> (Intercept)   0.1289     0.0992   1.299 1.938e-01 #> x             0.7062     0.1212   5.826 5.681e-09 library(nlme) mod_nlme <- lme(y ~ x,   data = hsced, random = list(id = ~1),   weights = varIdent(form = ~ 1 | item), method = \"ML\" ) summary(mod_nlme) #> Linear mixed-effects model fit by maximum likelihood #>   Data: hsced  #>       AIC      BIC   logLik #>   4126.28 4151.731 -2058.14 #>  #> Random effects: #>  Formula: ~1 | id #>         (Intercept)  Residual #> StdDev:   0.9940033 0.9796423 #>  #> Variance function: #>  Structure: Different standard deviations per stratum #>  Formula: ~1 | item  #>  Parameter estimates: #>        1        2  #> 1.000000 1.412369  #> Fixed effects:  y ~ x  #>                 Value  Std.Error  DF  t-value p-value #> (Intercept) 0.1288960 0.09927455 999 1.298379  0.1945 #> x           0.7062301 0.12130578 999 5.821899  0.0000 #>  Correlation:  #>   (Intr) #> x -0.624 #>  #> Standardized Within-Group Residuals: #>         Min          Q1         Med          Q3         Max  #> -4.00355402 -0.60661607  0.02357892  0.60903083  3.06299731  #>  #> Number of Observations: 1200 #> Number of Groups: 200 plot(mod) mod0 <- galamm(   formula = y ~ x + (1 | id),   data = hsced ) anova(mod, mod0) #> Data: hsced #> Models: #> mod0: y ~ x + (1 | id) #> mod: y ~ x + (1 | id) #>      npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)     #> mod0    4 4171.6 4191.9 -2081.8   4163.6                          #> mod     5 4126.3 4151.7 -2058.1   4116.3 47.281  1   6.15e-12 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"mixed-normal-and-binomial-response","dir":"Articles","previous_headings":"","what":"Mixed Normal and Binomial Response","title":"Models with Mixed Response Types","text":"start mresp dataset, comes package. variable “itemgroup” defines response type; equals “” normally distributed responses “b” binomially distributed responses. link common random intercept. terms GALAMM defined introductory vignette, simplicity assuming use canonincal link functions, response model \\[ f\\left(y_{ij} | \\nu_{ij}, \\phi\\right) = \\exp \\left( \\frac{y_{ij}\\nu_{ij} - b\\left(\\nu_{ij}\\right)}{\\phi} + c\\left(y_{ij}, \\phi\\right) \\right) \\] \\(\\)th observation \\(j\\) subject. Although don’t show subscript, variable itemgroup = \"\" Gaussian response, \\(b(\\nu) = \\nu^{2}/2\\) support distribution entire real line \\(\\mathbb{R}\\). mean case given \\(\\mu_{ij} = \\nu_{ij}\\). itemgroup = \"b\" binomial response, \\(b(\\nu) = \\log(1 + \\exp(\\nu))\\) support \\(\\{0, 1\\}\\). binomial case also \\(\\phi=1\\). mean case given \\(\\mu_{ij} = \\exp(\\nu_{ij}) / (1 + \\exp(\\nu_{ij}))\\). function \\(c(y_{ij}, \\phi)\\) also differs cases, interest, since depend linear predictor. hence matters value log-likelihood, derivative respect parameters interest. Next, nonlinear predictor given \\[\\nu_{ij} = \\beta_{0} + x_{ij}\\beta_{1} + \\mathbf{z}_{ij}^{T}\\boldsymbol{\\lambda} \\eta\\] \\(x_{ij}\\) explanatory \\(\\mathbf{z}_{ij}\\) dummy vector length 2 exactly one element equal one one element equal zero. itemgroup = \"\", \\(\\mathbf{z} = (1, 0)^{T}\\) itemgroup = \"b\", \\(\\mathbf{z} = (0, 1)^{T}\\). parameter \\(\\boldsymbol{\\lambda} = (1, \\lambda)^{T}\\) vector factor loadings, whose first element equals zero identifiability. \\(\\eta\\) latent variable, case representing underlying trait “causing” observed responses. structural model simply \\[ \\eta = \\zeta \\sim N(0, \\psi), \\] \\(N(0, \\psi)\\) denotes normal distribution mean 0 variance \\(\\psi\\). define loading matrix follows, value 1 indicates first element \\(\\boldsymbol{\\lambda}\\) fixed, value NA indicates second element unknown, estimated. set load.var = \"itemgroup\" rows data value itemgroup receive factor loading. formula, state (0 + level | id) specify subject, identified id, given level. level element mresp data, instead factor onto loading matrix loads. identify argument factor = list(\"level\"). chosen name \"level\", except names already columns mresp. also need define response families, vector also need way telling galamm row belongs family, family mapping. values family_mapping refer elements families. now ready estimate mixed response model. can also look summary output.","code":"head(mresp) #>   id         x          y itemgroup #> 1  1 0.8638214  0.2866329         a #> 2  1 0.7676133  2.5647490         a #> 3  1 0.8812059  1.0000000         b #> 4  1 0.2239725  1.0000000         b #> 5  2 0.7215696 -0.4721698         a #> 6  2 0.6924851  1.1750286         a (loading_matrix <- matrix(c(1, NA), ncol = 1)) #>      [,1] #> [1,]    1 #> [2,]   NA families <- c(gaussian, binomial) family_mapping <- ifelse(mresp$itemgroup == \"a\", 1, 2) mixed_resp <- galamm(   formula = y ~ x + (0 + level | id),   data = mresp,   family = families,   family_mapping = family_mapping,   load.var = \"itemgroup\",   lambda = list(loading_matrix),   factor = list(\"level\") ) summary(mixed_resp) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ x + (0 + level | id) #>    Data: mresp #>  #>      AIC      BIC   logLik deviance df.resid  #>   9248.7   9280.2  -4619.3   3633.1     3995  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.5360 -0.7078  0.2156  0.6456  2.5978  #>  #> Lambda: #>         level      SE #> lambda1 1.000       . #> lambda2 1.095 0.09982 #>  #> Random effects: #>  Groups Name  Variance Std.Dev. #>  id     level 1.05     1.025    #> Number of obs: 4000, groups:  id, 1000 #>  #> Fixed effects: #>             Estimate Std. Error z value  Pr(>|z|) #> (Intercept)    0.041    0.05803  0.7065 4.799e-01 #> x              0.971    0.08594 11.2994 1.321e-29"},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"covariate-measurement-error-model","dir":"Articles","previous_headings":"","what":"Covariate Measurement Error Model","title":"Models with Mixed Response Types","text":"example taken Chapter 14.2 Skrondal Rabe-Hesketh (2004), follows analyses (Rabe-Hesketh, Pickles, Skrondal 2003; Rabe-Hesketh, Skrondal, Pickles 2003). originality claimed respect analyses; sake understanding galamm code, explain quite detail. original dataset comes Morris, Marr, Clayton (1977). scientific question concerns impact fiber intake risk coronary heat disease. 337 middle aged men followed, either worked bank staff London Transport staff (indicated dummy variable bus). men first measurement fiber intake, additional measurement six months later. addition, binary variable indicating whether developed coronary heart disease. first rows dataset printed . single measurement fiber intake. instructive also look men two measurements fiber intake. three .","code":"head(diet) #>   id   age bus   item         y chd fiber fiber2 #> 1  1 -0.38   1 fiber1 17.814280   0     1      0 #> 2  1 -0.38   1    chd  0.000000   1     0      0 #> 3  2  0.54   1 fiber1  9.487736   0     1      0 #> 4  2  0.54   1    chd  0.000000   1     0      0 #> 5  3  8.78   1 fiber1 15.958630   0     1      0 #> 6  3  8.78   1    chd  0.000000   1     0      0 diet[diet$id %in% c(219, 220, 221), ] #>      id   age bus   item        y chd fiber fiber2 #> 429 219 -8.13   0 fiber1 15.64263   0     1      0 #> 430 219 -8.13   0 fiber2 14.87973   0     1      1 #> 431 219 -8.13   0    chd  0.00000   1     0      0 #> 432 220 -1.13   0 fiber1 13.46374   0     1      0 #> 433 220 -1.13   0 fiber2 14.73168   0     1      1 #> 434 220 -1.13   0    chd  0.00000   1     0      0 #> 435 221  3.67   0 fiber1 15.95863   0     1      0 #> 436 221  3.67   0 fiber2 17.28778   0     1      1 #> 437 221  3.67   0    chd  0.00000   1     0      0"},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"structural-model","dir":"Articles","previous_headings":"Covariate Measurement Error Model","what":"Structural Model","title":"Models with Mixed Response Types","text":"first goal model effect fiber intake risk heart disease. Since variable likely subject measurement error, well known simply averaging two measurements, available, using single measurement otherwise, lead bias lack power (Carroll et al. 2006). Instead, let \\(\\eta_{j}\\) denote true (latent) fiber intake person \\(j\\), define structural model \\[\\eta_{j} = \\mathbf{x}_{ij}'\\boldsymbol{\\gamma} + \\zeta_{j}.\\] \\(\\mathbf{x}_{ij}\\) vector covariates age, bus, interaction, well constant term defining intercept. R formula setting model matrix model.matrix(~ age * bus, data = diet). term \\(\\zeta_{j}\\) normally distributed disturbance, \\(\\zeta_{j} \\sim N(0, \\psi)\\).","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"measurement-model","dir":"Articles","previous_headings":"Covariate Measurement Error Model","what":"Measurement Model","title":"Models with Mixed Response Types","text":"assumed fiber measurements normally distributed around true value \\(\\eta_{j}\\), allow drift term \\(d_{ij}\\beta_{0}\\), \\(d_{2ij}\\) dummy variable whose value equals one \\(\\)th row \\(j\\)th person replicate fiber measurement, zero otherwise. allows drift measurements. \\[y_{ij} = d_{2ij} \\beta_{0} + \\eta_{j} + \\epsilon_{ij}, \\qquad \\epsilon_{ij} = N(0, \\theta)\\]","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"disease-model","dir":"Articles","previous_headings":"Covariate Measurement Error Model","what":"Disease Model","title":"Models with Mixed Response Types","text":"Next, rows corresponding coronary heart disease measurement, assume binomial model logit link function, .e., logistic regression. model given \\[\\text{logit}[P(y_{ij}=1 | \\eta_{j})] = \\mathbf{x}_{ij}'\\boldsymbol{\\beta} + \\lambda \\eta_{j},\\] \\(\\mathbf{x}_{ij}\\) , \\(\\boldsymbol{\\beta}\\) now represents direct effect age bus probability coronary heart disease. factor loading \\(\\lambda\\) regression coefficient latent fiber intake risk coronary heart disease.","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"nonlinear-predictor","dir":"Articles","previous_headings":"Covariate Measurement Error Model","what":"Nonlinear Predictor","title":"Models with Mixed Response Types","text":"Stacking three responses, fiber intake times 1 2, coronary heart disease, can define joint model GLLAMM nonlinear predictor \\[\\nu_{ij} = d_{2ij} \\beta_{0} + d_{3ij} \\mathbf{x}_{j}'\\boldsymbol{\\beta} + \\mathbf{x}_{j}'\\boldsymbol{\\gamma}\\left[(d_{1i} + d_{2i}) + \\lambda d_{3i}\\right] + \\zeta_{j} \\left[(d_{1i} + d_{2i}) + \\lambda d_{3i}\\right],\\] \\(d_{1i}\\) dummy variable fiber measurements timepoint 1 \\(d_{3i}\\) indicator coronary heart disease.","code":""},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"estimating-the-model-with-galamm","dir":"Articles","previous_headings":"Covariate Measurement Error Model","what":"Estimating the Model with galamm","title":"Models with Mixed Response Types","text":"measurement model fiber , note implicitly factor loadings equal one. Letting item variable define rows receive loading, note factor levels follows: course changed , given levels, define following loading matrix: , “fiber1” “fiber2” receive loading fixed one, whereas loading “chd” remains estimated. also need define families, making sure binomial “chd” Gaussian “fiber1” “fiber2”. model formula also needs care case. define follows, note whole part 0 + chd + fiber + fiber2 replaced item. use former ease explanation. initial zero specifies don’t want R insert intercept term. Next, chd + (age * bus) : chd applies “chd” rows , corresponds \\(\\mathbf{x}_{ij}^{T} \\boldsymbol{\\beta}\\) disease model. part fiber + (age * bus) : fiber corresponds term \\(\\mathbf{x}_{ij}^{T}\\boldsymbol{\\gamma}\\) disease model, fiber2 corresponds drift term \\(d_{2ij}\\beta_{0}\\). can inspect model implied formula using nobars function lme4 (Bates et al. 2015) remove random effects, model.matrix. looks correctly set . Finally, random effects part (0 + loading | id) specifies id single random intercept, corresponds latent fiber intake \\(\\eta_{j}\\). Write 0 + loading means \\(\\eta_{j}\\) multiplied factor loadings defined loading matrix. now ready fit model. Looking summary output, however, reveals issue : Hessian matrix invertible, means compute variance-covariance matrix. note variance latent variable estimated exactly zero, although zero variance estimates well known phenomenon types models (see Hodges (2013) book-length treatment), seem reasonable case variation true fiber intake population bankers transport workers. suspect convergence issue algorithm, start simply turning lever make algorithm verbose. argument trace = 3 passed onto optim. Now got information, final estimate , since otherwise used parameters. now instead try increase intial estimate random effect parameter \\(\\theta\\). general \\(\\theta\\) vector containing elements Cholesky factor covariance matrix (see, Bates et al. (2015)), case just standard deviation latent variable. default, initial value 1, now try increase 10, start argument. output printed negative log-likelihood, since 1372.16 less 1406.8, increase initial value 10 led us local optimum higher likelihood value. Ideally tried initial values well, since Skrondal Rabe-Hesketh (2004) obtained negative log-likelihood value 1372.35 using adaptive quadrature estimation, pretty happy finding value close . can now use summary method, find estimates close corresponding model Table 14.1 Skrondal Rabe-Hesketh (2004). Now able reproduce results close Table 14.1 page 420 Skrondal Rabe-Hesketh (2004). useful assurance algorithm used galamm correctly implemented.","code":"levels(diet$item) #> [1] \"fiber1\" \"fiber2\" \"chd\" (loading_matrix <- matrix(c(1, 1, NA), ncol = 1)) #>      [,1] #> [1,]    1 #> [2,]    1 #> [3,]   NA families <- c(gaussian, binomial) family_mapping <- ifelse(diet$item == \"chd\", 2, 1) formula <- y ~ 0 + chd + (age * bus):chd + fiber +   (age * bus):fiber + fiber2 + (0 + loading | id) head(model.matrix(nobars(formula), data = diet)) #>   chd fiber fiber2 chd:age chd:bus age:fiber bus:fiber chd:age:bus #> 1   0     1      0    0.00       0     -0.38         1        0.00 #> 2   1     0      0   -0.38       1      0.00         0       -0.38 #> 3   0     1      0    0.00       0      0.54         1        0.00 #> 4   1     0      0    0.54       1      0.00         0        0.54 #> 5   0     1      0    0.00       0      8.78         1        0.00 #> 6   1     0      0    8.78       1      0.00         0        8.78 #>   age:bus:fiber #> 1         -0.38 #> 2          0.00 #> 3          0.54 #> 4          0.00 #> 5          8.78 #> 6          0.00 mod <- galamm(   formula = formula,   data = diet,   family = families,   family_mapping = family_mapping,   factor = list(\"loading\"),   load.var = \"item\",   lambda = list(loading_matrix) ) summary(mod) #> Warning in vcov.galamm(object, parm = object$lambda_inds): Rank deficient #> Hessian matrix. Could not compute covariance matrix. #> Warning in vcov.galamm(object, \"beta\"): Rank deficient Hessian matrix. Could #> not compute covariance matrix. #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: formula #>    Data: diet #>  #>      AIC      BIC   logLik deviance df.resid  #>   2837.6   2892.9  -1406.8  12529.3      730  #>  #> Scaled residuals:  #>      Min       1Q   Median       3Q      Max  #> -10.1375  -0.4389  -0.3522   0.2743  27.3350  #>  #> Lambda: #>         loading SE #> lambda1   1.000  . #> lambda2   1.000  . #> lambda3  -2.026  . #>  #> Random effects: #>  Groups Name    Variance Std.Dev. #>  id     loading 0        0        #> Number of obs: 742, groups:  id, 333 #>  #> Fixed effects: #>               Estimate Std. Error z value Pr(>|z|) #> chd           -1.78692         NA      NA       NA #> fiber         17.96184         NA      NA       NA #> fiber2        -0.64927         NA      NA       NA #> chd:age        0.06682         NA      NA       NA #> chd:bus       -0.06882         NA      NA       NA #> fiber:age     -0.20480         NA      NA       NA #> fiber:bus     -1.69601         NA      NA       NA #> chd:age:bus   -0.04934         NA      NA       NA #> fiber:age:bus  0.16097         NA      NA       NA mod <- galamm(   formula = formula,   data = diet,   family = families,   family_mapping = family_mapping,   factor = list(\"loading\"),   load.var = \"item\",   lambda = list(loading_matrix),   control = galamm_control(optim_control = list(trace = 3)) ) #> N = 11, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=         2148  |proj g|=       122.68 #> At iterate    10  f =       1770.3  |proj g|=        30.656 #> At iterate    20  f =       1467.2  |proj g|=        11.286 #> At iterate    30  f =       1417.6  |proj g|=        73.904 #> At iterate    40  f =       1406.8  |proj g|=       0.21144 #>  #> iterations 43 #> function evaluations 51 #> segments explored during Cauchy searches 44 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 1 #> norm of the final projected gradient 0.0123301 #> final function value 1406.8 #>  #> F = 1406.8 #> final  value 1406.801105  #> converged mod <- galamm(   formula = formula,   data = diet,   family = families,   family_mapping = family_mapping,   factor = list(\"loading\"),   load.var = \"item\",   lambda = list(loading_matrix),   start = list(theta = 10),   control = galamm_control(optim_control = list(trace = 3)) ) #> N = 11, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       2827.6  |proj g|=       123.31 #> At iterate    10  f =       1764.5  |proj g|=        103.86 #> At iterate    20  f =       1623.6  |proj g|=        131.81 #> At iterate    30  f =       1442.4  |proj g|=        35.169 #> At iterate    40  f =         1388  |proj g|=        20.655 #> At iterate    50  f =       1372.4  |proj g|=        1.4033 #>  #> iterations 57 #> function evaluations 69 #> segments explored during Cauchy searches 58 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.0144842 #> final function value 1372.16 #>  #> F = 1372.16 #> final  value 1372.160387  #> converged summary(mod) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: formula #>    Data: diet #> Control: galamm_control(optim_control = list(trace = 3)) #>  #>      AIC      BIC   logLik deviance df.resid  #>   2768.3   2823.6  -1372.2   2002.9      730  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -258545      -1       0       0      66  #>  #> Lambda: #>         loading      SE #> lambda1  1.0000       . #> lambda2  1.0000       . #> lambda3 -0.1339 0.05121 #>  #> Random effects: #>  Groups Name    Variance Std.Dev. #>  id     loading 23.64    4.862    #> Number of obs: 742, groups:  id, 333 #>  #> Fixed effects: #>               Estimate Std. Error  z value   Pr(>|z|) #> chd           -1.91519    0.27229 -7.03358  2.013e-12 #> fiber         17.94834    0.48686 36.86568 1.640e-297 #> fiber2         0.22408    0.41783  0.53628  5.918e-01 #> chd:age        0.06613    0.05930  1.11511  2.648e-01 #> chd:bus       -0.02901    0.34355 -0.08443  9.327e-01 #> fiber:age     -0.21208    0.10090 -2.10180  3.557e-02 #> fiber:bus     -1.68276    0.63721 -2.64081  8.271e-03 #> chd:age:bus   -0.04998    0.06507 -0.76809  4.424e-01 #> fiber:age:bus  0.16822    0.11223  1.49890  1.339e-01"},{"path":"https://lcbc-uio.github.io/galamm/articles/mixed_response.html","id":"comparison-to-a-model-with-indirect-effect-only","dir":"Articles","previous_headings":"Covariate Measurement Error Model","what":"Comparison to a Model with Indirect Effect Only","title":"Models with Mixed Response Types","text":"model assumed age bus variables indirect effect risk coronary heart disease impact fiber intake, well direct effect. Still following Skrondal Rabe-Hesketh (2004), now estimate alternative model indirect effects. disease model now \\[ \\text{logit}[P(y_{ij}=1 | \\eta_{j})] = d_{ij3}\\beta_{03} + \\lambda \\eta_{j}, \\] formula becomes Everything else , fit new model Looking summary ouptput, estimates now close first column Table 14.1 Skrondal Rabe-Hesketh (2004). can use anova method galamm objects compare models. AIC BIC favor simpler model indirect effects.","code":"formula0 <- y ~ 0 + chd + fiber + (age * bus):fiber + fiber2 +   (0 + loading | id) mod0 <- galamm(   formula = formula0,   data = diet,   family = families,   family_mapping = family_mapping,   factor = list(\"loading\"),   load.var = \"item\",   lambda = list(loading_matrix),   start = list(theta = 10),   control = galamm_control(optim_control = list(trace = 3)) ) #> N = 8, M = 20 machine precision = 2.22045e-16 #> At X0, 0 variables are exactly at the bounds #> At iterate     0  f=       2827.6  |proj g|=       123.31 #> At iterate    10  f =       1664.7  |proj g|=        25.235 #> At iterate    20  f =       1427.9  |proj g|=        37.186 #> At iterate    30  f =       1373.5  |proj g|=        5.1449 #>  #> iterations 37 #> function evaluations 40 #> segments explored during Cauchy searches 38 #> BFGS updates skipped 0 #> active bounds at final generalized Cauchy point 0 #> norm of the final projected gradient 0.000304544 #> final function value 1373.01 #>  #> F = 1373.01 #> final  value 1373.013263  #> converged summary(mod0) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: formula0 #>    Data: diet #> Control: galamm_control(optim_control = list(trace = 3)) #>  #>      AIC      BIC   logLik deviance df.resid  #>   2764.0   2805.5  -1373.0   2007.9      733  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -280306      -1       0       0      66  #>  #> Lambda: #>         loading      SE #> lambda1   1.000       . #> lambda2   1.000       . #> lambda3  -0.136 0.05148 #>  #> Random effects: #>  Groups Name    Variance Std.Dev. #>  id     loading 23.64    4.862    #> Number of obs: 742, groups:  id, 333 #>  #> Fixed effects: #>               Estimate Std. Error  z value   Pr(>|z|) #> chd            -1.9668    0.18248 -10.7783  4.360e-27 #> fiber          17.9741    0.48123  37.3504 2.502e-305 #> fiber2          0.2238    0.41779   0.5358  5.921e-01 #> fiber:age      -0.1896    0.09914  -1.9122  5.585e-02 #> fiber:bus      -1.6991    0.62529  -2.7173  6.581e-03 #> fiber:age:bus   0.1515    0.11012   1.3760  1.688e-01 anova(mod, mod0) #> Data: diet #> Models: #> mod0: formula0 #> mod: formula #>      npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq) #> mod0    9 2764.0 2805.5 -1373.0   2746.0                      #> mod    12 2768.3 2823.6 -1372.2   2744.3 1.7058  3     0.6357"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/articles/semiparametric.html","id":"generalized-additive-models-with-gaussian-responses","dir":"Articles","previous_headings":"","what":"Generalized Additive Models with Gaussian Responses","title":"Semiparametric Latent Variable Modeling","text":"cognition dataset contains simulated data measurements abilities three cognitive domains. first example, focus first item measured first domain. subject dataset measured eight times, can plot measurements follows:  use generalized additive mixed model random intercepts per subject estimate function relating \\(x\\) \\(y\\). terms model framework outlined introductory vignette, model \\(\\)th response \\(j\\)th subject \\[ y_{ij} = f(x_{ij}) + \\eta_{j} + \\epsilon_{ij} \\] \\(f(x_{ij})\\) smooth function estimated, \\(\\eta_{j} \\sim N(0, \\psi)\\) random intercept, \\(\\epsilon_{ij} \\sim N(0, \\phi)\\) residual term. model can estimated using gamm4 follows: resulting estimated smooth term looks sensible. galamm use similar argument, random specification now part model formula.","code":"head(cognition) #>   id domain          x item trials          y #> 1  1      1 0.06475113    1      1 0.16788973 #> 2  1      1 0.06475113    2      1 0.08897838 #> 3  1      1 0.06475113    3      1 0.03162123 #> 4  1      1 0.15766278    1      1 0.46598362 #> 5  1      1 0.15766278    2      1 0.84564656 #> 6  1      1 0.15766278    3      1 0.20549872 dat <- subset(cognition, domain == 1 & item == 1) ggplot(dat, aes(x = x, y = y, group = id)) +   geom_point(size = .1) +   geom_line(alpha = .3) mod_gamm4 <- gamm4::gamm4(y ~ s(x), random = ~ (1 | id), data = dat, REML = FALSE) summary(mod_gamm4$mer) mod <- galamm(y ~ s(x) + (1 | id), data = dat) formula <- y ~ s(x) + (1 | id) weights <- NULL data <- dat family <- gaussian family_mapping <- rep(1L, nrow(data)) load.var <- NULL lambda <- NULL factor <- NULL start <- NULL control <- galamm_control()"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Øystein Sørensen. Author, maintainer.","code":""},{"path":"https://lcbc-uio.github.io/galamm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sørensen Ø, Walhovd K, Fjell (2023). “Longitudinal Modeling Age-Dependent Latent Traits Generalized Additive Latent Mixed Models.” Psychometrika, 88(2), 456-486. doi:10.1007/s11336-023-09910-z.","code":"@Article{,   title = {Longitudinal Modeling of Age-Dependent Latent Traits with Generalized Additive Latent and Mixed Models},   author = {{\\O}ystein S{\\o}rensen and Kristine B. Walhovd and Anders M. Fjell},   journal = {Psychometrika},   year = {2023},   volume = {88},   number = {2},   pages = {456-486},   doi = {10.1007/s11336-023-09910-z}, }"},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"generalized-additive-latent-and-mixed-models","dir":"","previous_headings":"","what":"Generalized Additive Latent and Mixed Models","title":"Generalized Additive Latent and Mixed Models","text":"galamm estimates generalized additive latent mixed models (GALAMMs). model framework computational algorithms introduced Sørensen, Fjell, Walhovd (2023), freely available Psychometrika. extension GLLAMM framework multilevel latent variable modeling detailed Rabe-Hesketh, Skrondal, Pickles (2004) Skrondal Rabe-Hesketh (2004), particular efficiently handling crossed random effects semiparametric estimation.","code":""},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"what-can-the-package-do","dir":"","previous_headings":"","what":"What Can the Package Do?","title":"Generalized Additive Latent and Mixed Models","text":"Many applications, particularly social sciences, require modeling capabilities beyond easily supported computationally feasible popular R packages like mgcv (Wood 2017), lavaan (Rosseel 2012), lme4 (Bates et al. 2015), OpenMx (Neale et al. 2016), well Stata based GLLAMM software (Rabe-Hesketh, Skrondal, Pickles 2004, 2005). particular, maximally utilize large datasets available today, typically necessary combine tools latent variable modeling, hierarchical modeling, semiparametric estimation. possible Bayesian hierarchical models tools like Stan, requires considerable expertise may beyond scope single data analysis project. goal galamm enable estimation models combination following features (click links go relevant vignette): Data arbitrary number grouping levels, crossed hierarchical. Linear mixed models factor structures. Generalized linear mixed models factor structures. Linear mixed models heteroscedastic residuals. Mixed models mixed response types. Generalized additive mixed models factor structures. Random effects defined using lme4 syntax, syntax factor structures close PLmixed (Rockwood Jeon 2019). However, types models supported PLmixed galamm, galamm usually considerably faster. Smooth terms, generalized additive mixed models, use syntax mgcv. users, necessary think actual computations performed, although detailed optimization vignette. short, core computations done using sparse matrix methods supported RcppEigen (Bates Eddelbuettel 2013) automatic differentiation using C++ library autodiff (Leal 2018).","code":""},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"where-do-i-start","dir":"","previous_headings":"","what":"Where Do I Start?","title":"Generalized Additive Latent and Mixed Models","text":"get started, take look introductory vignette.","code":""},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generalized Additive Latent and Mixed Models","text":"can install development version galamm GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"LCBC-UiO/galamm\")"},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Generalized Additive Latent and Mixed Models","text":"dataframe mresp contains simulated data mixed response types. Responses rows itemgroup = \"\" normally distributed rows itemgroup = \"b\" binomially distributed. given subject, identified id variable, responses associated underlying latent variable. hence need model process jointly, model set follows: summary function gives information model fit.","code":"library(galamm) #> Loading required package: mgcv #> Loading required package: nlme #> This is mgcv 1.9-0. For overview type 'help(\"mgcv-package\")'. head(mresp) #>   id         x          y itemgroup #> 1  1 0.8638214  0.2866329         a #> 2  1 0.7676133  2.5647490         a #> 3  1 0.8812059  1.0000000         b #> 4  1 0.2239725  1.0000000         b #> 5  2 0.7215696 -0.4721698         a #> 6  2 0.6924851  1.1750286         a mixed_resp <- galamm(   formula = y ~ x + (0 + loading | id),   data = mresp,   family = c(gaussian, binomial),   family_mapping = ifelse(mresp$itemgroup == \"a\", 1L, 2L),   load.var = \"itemgroup\",   lambda = list(matrix(c(1, NA), ncol = 1)),   factor = list(\"loading\") ) summary(mixed_resp) #> Generalized additive latent and mixed model fit by maximum marginal likelihood. #> Formula: y ~ x + (0 + loading | id) #>    Data: mresp #>  #>      AIC      BIC   logLik deviance df.resid  #>   9248.7   9280.2  -4619.3   3633.1     3995  #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.5360 -0.7078  0.2156  0.6456  2.5978  #>  #> Lambda: #>         loading      SE #> lambda1   1.000       . #> lambda2   1.095 0.09982 #>  #> Random effects: #>  Groups Name    Variance Std.Dev. #>  id     loading 1.05     1.025    #> Number of obs: 4000, groups:  id, 1000 #>  #> Fixed effects: #>             Estimate Std. Error z value  Pr(>|z|) #> (Intercept)    0.041    0.05803  0.7065 4.799e-01 #> x              0.971    0.08594 11.2994 1.321e-29"},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"how-to-cite-this-package","dir":"","previous_headings":"","what":"How to cite this package","title":"Generalized Additive Latent and Mixed Models","text":"","code":"citation(\"galamm\") #> To cite package 'galamm' in publications use: #>  #>   Sørensen Ø, Walhovd K, Fjell A (2023). \"Longitudinal Modeling of #>   Age-Dependent Latent Traits with Generalized Additive Latent and #>   Mixed Models.\" _Psychometrika_, *88*(2), 456-486. #>   doi:10.1007/s11336-023-09910-z #>   <https://doi.org/10.1007/s11336-023-09910-z>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {Longitudinal Modeling of Age-Dependent Latent Traits with Generalized Additive Latent and Mixed Models}, #>     author = {{\\O}ystein S{\\o}rensen and Kristine B. Walhovd and Anders M. Fjell}, #>     journal = {Psychometrika}, #>     year = {2023}, #>     volume = {88}, #>     number = {2}, #>     pages = {456-486}, #>     doi = {10.1007/s11336-023-09910-z}, #>   }"},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"acknoweledgement","dir":"","previous_headings":"","what":"Acknoweledgement","title":"Generalized Additive Latent and Mixed Models","text":"parts code base galamm derived internal functions gamm4 (author: Simon Wood Fabian Scheipl) lme4 (authors: Douglas M. Bates, Martin Maechler, Ben Bolker, Steve Walker). Places occurs marked comments source code.","code":""},{"path":"https://lcbc-uio.github.io/galamm/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Generalized Additive Latent and Mixed Models","text":"Please note galamm project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/news.html","id":null,"dir":"","previous_headings":"","what":"galamm version 0.1.0","title":"galamm version 0.1.0","text":"Initial version.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/abbrDeparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviated deparse function taken from lme4 — abbrDeparse","title":"Abbreviated deparse function taken from lme4 — abbrDeparse","text":"Abbreviated deparse function taken lme4","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/abbrDeparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviated deparse function taken from lme4 — abbrDeparse","text":"","code":"abbrDeparse(x, width = 60)"},{"path":"https://lcbc-uio.github.io/galamm/reference/abbrDeparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abbreviated deparse function taken from lme4 — abbrDeparse","text":"x Name deparse width Field width","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/abbrDeparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abbreviated deparse function taken from lme4 — abbrDeparse","text":"String","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/anova.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Likelihoods of galamm Objects — anova.galamm","title":"Compare Likelihoods of galamm Objects — anova.galamm","text":"Compare Likelihoods galamm Objects","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/anova.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Likelihoods of galamm Objects — anova.galamm","text":"","code":"# S3 method for galamm anova(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/anova.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Likelihoods of galamm Objects — anova.galamm","text":"object model fitted galamm ... optional fitted models class galamm.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/anova.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Likelihoods of galamm Objects — anova.galamm","text":"table","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/anova.galamm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare Likelihoods of galamm Objects — anova.galamm","text":"source code function adapted lme4:::anova.merMod.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/augment.smX.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function from mgcv — augment.smX","title":"Internal function from mgcv — augment.smX","text":"Internal function mgcv","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/augment.smX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function from mgcv — augment.smX","text":"","code":"augment.smX(sm, nobs, np)"},{"path":"https://lcbc-uio.github.io/galamm/reference/augment.smX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function from mgcv — augment.smX","text":"sm smooth nobs observations np number","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/augment.smX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function from mgcv — augment.smX","text":"value","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/augment.smX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function from mgcv — augment.smX","text":"Simon Wood","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/clone.smooth.spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function from mgcv — clone.smooth.spec","title":"Internal function from mgcv — clone.smooth.spec","text":"Internal function mgcv","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/clone.smooth.spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function from mgcv — clone.smooth.spec","text":"","code":"clone.smooth.spec(specb, spec)"},{"path":"https://lcbc-uio.github.io/galamm/reference/clone.smooth.spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function from mgcv — clone.smooth.spec","text":"specb spec spec spec","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/clone.smooth.spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function from mgcv — clone.smooth.spec","text":"value","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/clone.smooth.spec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function from mgcv — clone.smooth.spec","text":"Simon Wood","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/coef.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract galamm Coefficients — coef.galamm","title":"Extract galamm Coefficients — coef.galamm","text":"Extract galamm Coefficients","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/coef.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract galamm Coefficients — coef.galamm","text":"","code":"# S3 method for galamm coef(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/coef.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract galamm Coefficients — coef.galamm","text":"object object class galamm ... Additional parameters","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/coef.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract galamm Coefficients — coef.galamm","text":"object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/cognition.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Data with Measurements of Cognitive Abilities — cognition","title":"Simulated Data with Measurements of Cognitive Abilities — cognition","text":"Simulated dataset mimicking measurement abilities three cognitive domains. latent traits (cognitive ability given domain) based functions mgcv::gamSim, depend explanatory variable x.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/cognition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Data with Measurements of Cognitive Abilities — cognition","text":"","code":"cognition"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/cognition.html","id":"cognition-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"cognition A data frame with 14400 rows and 6 columns:","title":"Simulated Data with Measurements of Cognitive Abilities — cognition","text":"id Subject ID. domain Factor variable denoting cognitive domain. x Explanatory variable. item Factor variable denoting item within tests cognitive domain. trials Number trials, applicable. y Response variable. domain 1 real number, domain 2 binomially distributed variable based single trial, domain 3 number successes 10 binomial trials.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/confint.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for model parameters — confint.galamm","title":"Confidence intervals for model parameters — confint.galamm","text":"Confidence intervals model parameters","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/confint.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for model parameters — confint.galamm","text":"","code":"# S3 method for galamm confint(object, parm, level = 0.95, method = \"Wald\", ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/confint.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for model parameters — confint.galamm","text":"object Model object parm Parameters compute intervals. Use \"theta\" get variance parameters, \"beta\" get fixed regression coefficients, \"lambda\" get factor loadings, \"weights\" get weights. Can also vector number. level Confidence level. method Currently \"Wald\" available. ... arguments.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/confint.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for model parameters — confint.galamm","text":"Confidence intervals.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/deviance.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Deviance of galamm Object — deviance.galamm","title":"Extract Deviance of galamm Object — deviance.galamm","text":"Extract Deviance galamm Object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/deviance.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Deviance of galamm Object — deviance.galamm","text":"","code":"# S3 method for galamm deviance(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/deviance.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Deviance of galamm Object — deviance.galamm","text":"object Object ... arguments","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/deviance.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Deviance of galamm Object — deviance.galamm","text":"Deviance","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":null,"dir":"Reference","previous_headings":"","what":"Diet Data — diet","title":"Diet Data — diet","text":"Longitudinal epilepsy data Morris et al. (1977) . documenation based Chapter 14.2 Skrondal Rabe-Hesketh (2004) , dataset used. See also Rabe-Hesketh et al. (2003) .","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diet Data — diet","text":"","code":"diet"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":"diet-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"diet A data frame with 236 rows and 7 columns:","title":"Diet Data — diet","text":"id Subject ID. age Age (standardized). bus Dummy variable indicating whether subject bus driver banking staff. item Integer indicating whether outcome fiber intake time 1 (item = 1), fiber intake time 2 (item = 2), coronary heart disease (item = 3). y Outcome. chd Dummy variable indicating whether y indicator coronary heart disease, coded 0/1. fiber Dummy variable indicating whether y fiber measurement either timepoint 1 2. fiber2 Dummy variable indicating whether y fiber measurement timepoint 2.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Diet Data — diet","text":"http://www.gllamm.org/books/readme.html#14.2","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/diet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diet Data — diet","text":"Morris JN, Marr JW, Clayton DG (1977). “Diet Heart: Postscript.” Br Med J, 2(6098), 1307--1314. ISSN 0007-1447, 1468-5833, doi:10.1136/bmj.2.6098.1307 . Rabe-Hesketh S, Pickles , Skrondal (2003). “Correcting Covariate Measurement Error Logistic Regression Using Nonparametric Maximum Likelihood Estimation.” Statistical Modelling, 3(3), 215--232. ISSN 1471-082X, doi:10.1191/1471082X03st056oa . Skrondal , Rabe-Hesketh S (2004). Generalized Latent Variable Modeling,  Interdisciplinary Statistics Series. Chapman Hall/CRC, Boca Raton, Florida.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":null,"dir":"Reference","previous_headings":"","what":"Epilepsy Data — epilep","title":"Epilepsy Data — epilep","text":"Longitudinal epilepsy data Leppik et al. (1987) . documenation based Chapter 11.3 Skrondal Rabe-Hesketh (2004) , dataset used.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epilepsy Data — epilep","text":"","code":"epilep"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":"epilep-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"epilep A data frame with 236 rows and 7 columns:","title":"Epilepsy Data — epilep","text":"subj Subject ID. y Number seizures. treat Dummy variable treatment group. visit Time visit. v4 Dummy visit 4. lage Logarithm age. lbas Logarithm quarter number seizures eight weeks preceeding entry trial.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Epilepsy Data — epilep","text":"http://www.gllamm.org/books/readme.html#11.3","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/epilep.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Epilepsy Data — epilep","text":"Leppik IE, Dreifuss FE, Porter R, Bowman T, Santilli N, Jacobs M, Crosby C, Cloyd J, Stackman J, Graves N, Sutula T, Welty T, Vickery J, Brundage R, Gates J, Gumnit RJ, Gutierrez (1987). “Controlled Study Progabide Partial Seizures: Methodology Results.” Neurology, 37(6), 963--963. ISSN 0028-3878, 1526-632X, doi:10.1212/WNL.37.6.963 . Skrondal , Rabe-Hesketh S (2004). Generalized Latent Variable Modeling,  Interdisciplinary Statistics Series. Chapman Hall/CRC, Boca Raton, Florida.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/factor_loadings.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Factor Loadings from galamm Object — factor_loadings.galamm","title":"Extract Factor Loadings from galamm Object — factor_loadings.galamm","text":"Extract Factor Loadings galamm Object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/factor_loadings.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Factor Loadings from galamm Object — factor_loadings.galamm","text":"","code":"# S3 method for galamm factor_loadings(object)"},{"path":"https://lcbc-uio.github.io/galamm/reference/factor_loadings.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Factor Loadings from galamm Object — factor_loadings.galamm","text":"object object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/factor_loadings.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Factor Loadings from galamm Object — factor_loadings.galamm","text":"Vector","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/factor_loadings.galamm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Factor Loadings from galamm Object — factor_loadings.galamm","text":"function named factor_loadings rather just loadings avoid conflict stats::loadings.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/fitted.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model Fitted Values — fitted.galamm","title":"Extract Model Fitted Values — fitted.galamm","text":"Extract Model Fitted Values","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/fitted.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model Fitted Values — fitted.galamm","text":"","code":"# S3 method for galamm fitted(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/fitted.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model Fitted Values — fitted.galamm","text":"object galamm object ... arguments","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/fitted.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model Fitted Values — fitted.galamm","text":"Numerical vector","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/fixef.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Fixed Effects from galamm Object — fixef.galamm","title":"Extract Fixed Effects from galamm Object — fixef.galamm","text":"Extract Fixed Effects galamm Object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/fixef.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Fixed Effects from galamm Object — fixef.galamm","text":"","code":"# S3 method for galamm fixef(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/fixef.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Fixed Effects from galamm Object — fixef.galamm","text":"object object ... parameters","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/fixef.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Fixed Effects from galamm Object — fixef.galamm","text":"Fixed effects","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"galamm: Estimation of Generalized Additive Latent and\nMixed Models. — galamm-package","title":"galamm: Estimation of Generalized Additive Latent and\nMixed Models. — galamm-package","text":"package performs maximum marginal likelihood estimation generalized additive latent mixed models.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a generalized additive latent and mixed model — galamm","title":"Fit a generalized additive latent and mixed model — galamm","text":"Fit generalized additive latent mixed model","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a generalized additive latent and mixed model — galamm","text":"","code":"galamm(   formula,   weights = NULL,   data,   family = gaussian,   family_mapping = rep(1L, nrow(data)),   load.var = NULL,   lambda = NULL,   factor = NULL,   start = NULL,   control = galamm_control() )"},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a generalized additive latent and mixed model — galamm","text":"formula formula weights optional formula object specifying expression residual variance. Defaults NULL, corresponding homoscedastic errors. data dataset family vector families family_mapping vector mapping elements \"family\" rows \"data\". Defaults rep(1L, nrow(data)), means observations distributed according first element \"family\". load.var Variable factors load onto lambda Loading factor list factors start named list starting values parameters. Possible names list elements \"theta\", \"beta\", \"lambda\", represent numerical vectors. control Control object. Result calling galamm_control.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a generalized additive latent and mixed model — galamm","text":"model object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Values for galamm Fit — galamm_control","title":"Control Values for galamm Fit — galamm_control","text":"Control Values galamm Fit","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Values for galamm Fit — galamm_control","text":"","code":"galamm_control(optim_control = list(), maxit_conditional_modes = 10)"},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Values for galamm Fit — galamm_control","text":"optim_control List passed stats::optim's control argument. otherwise specified, following arguments set non-default values: fnscale = -1 lmm = 20. maxit_conditional_modes Maximum number iterations penalized iteratively reweighted least squares algorithm. Ignored family =   \"gaussian\" observations, since single step gives exact answer.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/galamm_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Values for galamm Fit — galamm_control","text":"Object class galamm_control","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.setup.html","id":null,"dir":"Reference","previous_headings":"","what":"GAM setup function from mgcv — gam.setup","title":"GAM setup function from mgcv — gam.setup","text":"function derived mgcv's internal function name.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GAM setup function from mgcv — gam.setup","text":"","code":"gam.setup(   formula,   pterms,   data = stop(\"No data supplied to gam.setup\"),   knots = NULL,   sp = NULL,   min.sp = NULL,   H = NULL,   absorb.cons = TRUE,   sparse.cons = 0,   select = FALSE,   idLinksBases = TRUE,   scale.penalty = TRUE,   paraPen = NULL,   gamm.call = FALSE,   drop.intercept = FALSE,   diagonal.penalty = FALSE,   apply.by = TRUE,   list.call = FALSE,   modCon = 0 )"},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GAM setup function from mgcv — gam.setup","text":"formula formula pterms parametric terms data data knots knots sp smoothing parameter min.sp min H hessian absorb.cons logical sparse.cons logical select variable selection idLinksBases ID scale.penalty documented yet paraPen documented yet gamm.call documented yet drop.intercept documented yet diagonal.penalty documented yet apply.documented yet list.call documented yet modCon documented yet","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GAM setup function from mgcv — gam.setup","text":"object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.setup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"GAM setup function from mgcv — gam.setup","text":"Simon N Wood","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.side.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function from mgcv — gam.side","title":"Internal function from mgcv — gam.side","text":"function derived function name mgcv, written Simon Wood.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.side.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function from mgcv — gam.side","text":"","code":"gam.side(sm, Xp, tol = .Machine$double.eps^0.5, with.pen = FALSE)"},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.side.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function from mgcv — gam.side","text":"sm list smooth Xp parametric model matrix tol tolerance .pen logical","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.side.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function from mgcv — gam.side","text":"value","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gam.side.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function from mgcv — gam.side","text":"Simon Wood","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for setting up model — gamm4","title":"Internal function for setting up model — gamm4","text":"Internal function setting model","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for setting up model — gamm4","text":"","code":"gamm4(fixed, random = NULL, data = list())"},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for setting up model — gamm4","text":"fixed formula excluding lme4 style random effects including smooths random random part data data","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for setting up model — gamm4","text":"lmod object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function for setting up model — gamm4","text":"Simon Wood Fabian Scheipl","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to set up gamm4 model — gamm4.setup","title":"Function to set up gamm4 model — gamm4.setup","text":"function derived internal function gamm4 package.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to set up gamm4 model — gamm4.setup","text":"","code":"gamm4.setup(   formula,   pterms,   data = stop(\"No data supplied to gamm.setup\"),   knots = NULL )"},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to set up gamm4 model — gamm4.setup","text":"formula formula pterms parametric terms data data knots knots","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to set up gamm4 model — gamm4.setup","text":"model","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/gamm4.setup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to set up gamm4 model — gamm4.setup","text":"Simon N Wood","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/hsced.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data with Heteroscedastic Residuals — hsced","title":"Example Data with Heteroscedastic Residuals — hsced","text":"Simulated dataset residual standard deviation varies items.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/hsced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data with Heteroscedastic Residuals — hsced","text":"","code":"hsced"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/hsced.html","id":"hsced-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"hsced A data frame with 1200 rows and 5 columns:","title":"Example Data with Heteroscedastic Residuals — hsced","text":"id Subject ID. age Timepoint. item Item indicator. x Explanatory variable y Outcome.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/hsced.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Data with Heteroscedastic Residuals — hsced","text":"references Rd macro \\insertAllCites help page.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/logLik.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Log-Likelihood of galamm Object — logLik.galamm","title":"Extract Log-Likelihood of galamm Object — logLik.galamm","text":"Extract Log-Likelihood galamm Object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/logLik.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Log-Likelihood of galamm Object — logLik.galamm","text":"","code":"# S3 method for galamm logLik(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/logLik.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Log-Likelihood of galamm Object — logLik.galamm","text":"object Object ... arguments","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/logLik.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Log-Likelihood of galamm Object — logLik.galamm","text":"Object class logLik","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"function computes Laplace approximate marginal likelihood.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"","code":"marginal_likelihood(   y,   trials = NULL,   X,   Zt,   Lambdat,   beta,   theta,   theta_mapping,   u_init = rep(0, nrow(Zt)),   lambda = numeric(),   lambda_mapping_X = integer(),   lambda_mapping_X_covs = integer(),   lambda_mapping_Zt = integer(),   lambda_mapping_Zt_covs = integer(),   weights = numeric(),   weights_mapping = integer(),   family = \"gaussian\",   family_mapping = rep(0L, length(y)),   maxit_conditional_modes = 1L,   gradient = TRUE,   hessian = FALSE,   epsilon_u = 1e-10 )"},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"y numeric vector responses. trials numeric vector representing number trials. used binomial models, set arbitrary value otherwise. X dense numeric matrix. Zt sparse matrix class dgCMatrix. Lambdat sparse matrix class dgCMatrix. beta numeric vector fixed effects. theta numeric vector variance components, parametrized identically lme4. theta_mapping integer vector corresponding Lind used lme4, base zero indexing. u_init Initial values random effects. Defaults vector zeros. lambda numeric vector factor loadings. lambda_mapping_X integer vector mappings X lambda, columnwise. set integer() used. entry -1 indicates corresponding value X depend lambda, case first element lambda fixed 1. lambda_mapping_X_covs Optional list covariates. lambda_mapping_Zt integer vector mappings Zt lambda, along nonzero elements Zt can found Zt@x. set integer() used. entry -1 indicates corresponding value X depend lambda, case first element lambda fixed 1. lambda_mapping_Zt_covs Optional list covariates. weights Vector weights. weights_mapping Mapping family length one character denoting family. family_mapping Mapping maxit_conditional_modes Maximum number iterations conditional models. Can 1 family = \"gaussian\". gradient Boolean specifying whether including gradient given parameters. Defaults TRUE. hessian Boolean specifying whether include Hessian matrix given parameters. Defaults FALSE. epsilon_u Tolerance inner iteration. Defaults 1e-10.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"list elements logLik gradient.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/marginal_likelihood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the marginal likelihood of a GLLAMM or GALAMM — marginal_likelihood","text":"examples, see vignette maximum likelihood estimation.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/mresp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Mixed Response Data — mresp","title":"Simulated Mixed Response Data — mresp","text":"basic mixed response dataset one set normally distributed responses one set binomially distributed responses.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/mresp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Mixed Response Data — mresp","text":"","code":"mresp"},{"path":[]},{"path":"https://lcbc-uio.github.io/galamm/reference/mresp.html","id":"mresp-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"mresp A data frame with 4000 rows and 5 columns:","title":"Simulated Mixed Response Data — mresp","text":"id Subject ID. x Predictor variable. y Response. itemgroup Factor variable equals \"\" normally distributed responses \"b\" binomially distributed response (1 trial).","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/nobs.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Number of Observations from a galamm Fit — nobs.galamm","title":"Extract the Number of Observations from a galamm Fit — nobs.galamm","text":"Extract Number Observations galamm Fit","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/nobs.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Number of Observations from a galamm Fit — nobs.galamm","text":"","code":"# S3 method for galamm nobs(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/nobs.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Number of Observations from a galamm Fit — nobs.galamm","text":"object galamm object ... arguments","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/nobs.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Number of Observations from a galamm Fit — nobs.galamm","text":"number","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/optim_control.galamm_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract optim control parameters — optim_control.galamm_control","title":"Extract optim control parameters — optim_control.galamm_control","text":"Extract optim control parameters","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/optim_control.galamm_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract optim control parameters — optim_control.galamm_control","text":"","code":"# S3 method for galamm_control optim_control(x)"},{"path":"https://lcbc-uio.github.io/galamm/reference/optim_control.galamm_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract optim control parameters — optim_control.galamm_control","text":"x Object class galamm_control","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/optim_control.galamm_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract optim control parameters — optim_control.galamm_control","text":"List","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/parametricPenalty.html","id":null,"dir":"Reference","previous_headings":"","what":"Function from mgcv — parametricPenalty","title":"Function from mgcv — parametricPenalty","text":"function derived internal mgcv function, written Simon Wood.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/parametricPenalty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function from mgcv — parametricPenalty","text":"","code":"parametricPenalty(pterms, assign, paraPen, sp0)"},{"path":"https://lcbc-uio.github.io/galamm/reference/parametricPenalty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function from mgcv — parametricPenalty","text":"pterms parametric terms assign ss paraPen ss sp0 ss","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/parametricPenalty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function from mgcv — parametricPenalty","text":"value","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/parametricPenalty.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function from mgcv — parametricPenalty","text":"Simon Wood","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/plot.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic Plots for galamm Objects — plot.galamm","title":"Diagnostic Plots for galamm Objects — plot.galamm","text":"Diagnostic Plots galamm Objects","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/plot.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic Plots for galamm Objects — plot.galamm","text":"","code":"# S3 method for galamm plot(x, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/plot.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic Plots for galamm Objects — plot.galamm","text":"x galamm object ... arguments","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/plot.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostic Plots for galamm Objects — plot.galamm","text":"plot displayed","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/predict.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions from a model at new data values — predict.galamm","title":"Predictions from a model at new data values — predict.galamm","text":"Predictions model new data values","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/predict.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions from a model at new data values — predict.galamm","text":"","code":"# S3 method for galamm predict(object, newdata = NULL, type = c(\"link\", \"response\"), ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/predict.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions from a model at new data values — predict.galamm","text":"object fitted model object newdata Data evaluate predictions. Defaults \"NULL\", means predictions evaluate data used fit model. type Type prediction object returned. ... arguments.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/predict.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions from a model at new data values — predict.galamm","text":"number vector predicted values.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/print.summary.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for GALAMM fits — print.summary.galamm","title":"Print method for GALAMM fits — print.summary.galamm","text":"Print method GALAMM fits","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/print.summary.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for GALAMM fits — print.summary.galamm","text":"","code":"# S3 method for summary.galamm print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/print.summary.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for GALAMM fits — print.summary.galamm","text":"x object class \"summary.galamm\". digits Number digits. ... arguments.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/print.summary.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for GALAMM fits — print.summary.galamm","text":"Summary printed screen. Invisible returns argument x.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/ranef.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Random Effects from galamm Object — ranef.galamm","title":"Extract Random Effects from galamm Object — ranef.galamm","text":"Extract Random Effects galamm Object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/ranef.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Random Effects from galamm Object — ranef.galamm","text":"","code":"# S3 method for galamm ranef(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/ranef.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Random Effects from galamm Object — ranef.galamm","text":"object object ... parameters","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/ranef.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Random Effects from galamm Object — ranef.galamm","text":"Random effects","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/ranef.galamm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Random Effects from galamm Object — ranef.galamm","text":"function derived lme4::ranef.merMod, written Douglas Bates, Martin Maechler, Ben Bolker, Steve Walker.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/residuals.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Residuals of galamm Objects — residuals.galamm","title":"Residuals of galamm Objects — residuals.galamm","text":"Residuals galamm Objects","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/residuals.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residuals of galamm Objects — residuals.galamm","text":"","code":"# S3 method for galamm residuals(object, type = c(\"pearson\", \"deviance\"), ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/residuals.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residuals of galamm Objects — residuals.galamm","text":"object galamm object type Type ... arguments","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/residuals.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residuals of galamm Objects — residuals.galamm","text":"Vector","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/summary.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing GALAMM Fits — summary.galamm","title":"Summarizing GALAMM Fits — summary.galamm","text":"Summary method class \"galamm\".","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/summary.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing GALAMM Fits — summary.galamm","text":"","code":"# S3 method for galamm summary(object, ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/summary.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing GALAMM Fits — summary.galamm","text":"object object class \"galamm\", usually result calling galamm. ... arguments.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/summary.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing GALAMM Fits — summary.galamm","text":"list summary statistics fitted model.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/variable.summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function from mgcv — variable.summary","title":"Internal function from mgcv — variable.summary","text":"function derived internal mgcv function, written Simon Wood.","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/variable.summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function from mgcv — variable.summary","text":"","code":"variable.summary(pf, dl, n)"},{"path":"https://lcbc-uio.github.io/galamm/reference/variable.summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function from mgcv — variable.summary","text":"pf pd dl dl n n","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/variable.summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function from mgcv — variable.summary","text":"summary","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/variable.summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function from mgcv — variable.summary","text":"Simon Wood","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/vcov.galamm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Variance-Covariance Matrix for galamm Model Object — vcov.galamm","title":"Calculate Variance-Covariance Matrix for galamm Model Object — vcov.galamm","text":"Calculate Variance-Covariance Matrix galamm Model Object","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/vcov.galamm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Variance-Covariance Matrix for galamm Model Object — vcov.galamm","text":"","code":"# S3 method for galamm vcov(object, parm = \"beta\", ...)"},{"path":"https://lcbc-uio.github.io/galamm/reference/vcov.galamm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Variance-Covariance Matrix for galamm Model Object — vcov.galamm","text":"object Fitted model parm parameters variance-covariance matrix calculated. Character vector one elements \"theta\", \"beta\", \"lambda\", \"weights\". Can also integer vector. ... arguments","code":""},{"path":"https://lcbc-uio.github.io/galamm/reference/vcov.galamm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Variance-Covariance Matrix for galamm Model Object — vcov.galamm","text":"Variance-covariance matrix","code":""}]
